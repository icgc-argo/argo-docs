[["sample_registration.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"examples":"PACA-AU,BR-CA"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"examples":"PACA-AU,BR-CA","notes":"This is the unique id that is assigned to your program.  If you have logged into the platform, this is the Program Id that you see in the Submission area. For example, PACA-CA is a Program ID.","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"notes":{"type":"created","data":"This is the unique id that is assigned to your program.  If you have logged into the platform, this is the Program Id that you see in the Submission area. For example, PACA-CA is a Program ID."},"displayName":{"type":"created","data":"Program ID"}}}}],["sample_registration.submitter_donor_id",{"left":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"90234,BLD_donor_89,AML-90"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"90234,BLD_donor_89,AML-90","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["sample_registration.gender",{"left":{"name":"gender","valueType":"string","description":"Description of the donor self-reported gender. Gender is described as the assemblage of properties that distinguish people on the basis of their societal roles.","meta":{"validationDependency":true,"core":true},"restrictions":{"required":true,"codeList":["Male","Female","Other"]}},"right":{"name":"gender","valueType":"string","description":"Description of the donor self-reported gender. Gender is described as the assemblage of properties that distinguish people on the basis of their societal roles.","meta":{"validationDependency":true,"core":true,"displayName":"Gender"},"restrictions":{"required":true,"codeList":["Male","Female","Other"]}},"diff":{"meta":{"displayName":{"type":"created","data":"Gender"}}}}],["sample_registration.submitter_specimen_id",{"left":{"name":"submitter_specimen_id","valueType":"string","description":"Unique identifier of the specimen, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"LAML_PO,00445,THY_099-tumour"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_specimen_id","valueType":"string","description":"Unique identifier of the specimen, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"LAML_PO,00445,THY_099-tumour","displayName":"Submitter Specimen ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Specimen ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["sample_registration.specimen_tissue_source",{"left":{"name":"specimen_tissue_source","valueType":"string","description":"Tissue source of the biospecimen.","meta":{"validationDependency":true,"core":true},"restrictions":{"required":true,"codeList":["Blood derived","Blood derived - bone marrow","Blood derived - peripheral blood","Bone marrow","Buccal cell","Lymph node","Solid tissue","Plasma","Serum","Urine","Cerebrospinal fluid","Sputum","Other","Pleural effusion","Mononuclear cells from bone marrow","Saliva","Skin","Intestine","Buffy coat","Stomach","Esophagus","Tonsil","Spleen","Bone","Cerebellum","Endometrium"]}},"right":{"name":"specimen_tissue_source","valueType":"string","description":"Tissue source of the biospecimen.","meta":{"validationDependency":true,"core":true,"displayName":"Specimen Tissue Source"},"restrictions":{"required":true,"codeList":["Blood derived","Blood derived - bone marrow","Blood derived - peripheral blood","Bone marrow","Buccal cell","Lymph node","Solid tissue","Plasma","Serum","Urine","Cerebrospinal fluid","Sputum","Other","Pleural effusion","Mononuclear cells from bone marrow","Saliva","Skin","Intestine","Buffy coat","Stomach","Esophagus","Tonsil","Spleen","Bone","Cerebellum","Endometrium"]}},"diff":{"meta":{"displayName":{"type":"created","data":"Specimen Tissue Source"}}}}],["sample_registration.tumour_normal_designation",{"left":{"name":"tumour_normal_designation","valueType":"string","description":"Description of specimens tumour/normal status for data processing.","restrictions":{"required":true,"codeList":["Normal","Tumour"]},"meta":{"validationDependency":true,"core":true}},"right":{"name":"tumour_normal_designation","valueType":"string","description":"Description of specimens tumour/normal status for data processing.","restrictions":{"required":true,"codeList":["Normal","Tumour"]},"meta":{"validationDependency":true,"core":true,"displayName":"Tumour Normal Designation"}},"diff":{"meta":{"displayName":{"type":"created","data":"Tumour Normal Designation"}}}}],["sample_registration.specimen_type",{"left":{"name":"specimen_type","valueType":"string","description":"Description of the kind of specimen that was collected with respect to tumour/normal tissue origin.","restrictions":{"required":true,"codeList":["Normal","Normal - tissue adjacent to primary tumour","Primary tumour","Primary tumour - adjacent to normal","Primary tumour - additional new primary","Recurrent tumour","Metastatic tumour","Metastatic tumour - metastasis local to lymph node","Metastatic tumour - metastasis to distant location","Metastatic tumour - additional metastatic","Xenograft - derived from primary tumour","Xenograft - derived from tumour cell line","Cell line - derived from xenograft tumour","Cell line - derived from tumour","Cell line - derived from normal"],"script":["(function validate() {\n\n        const row = $row;\n        let result = {valid: true, message: \"Ok\"};\n        \n        const designation = row.tumour_normal_designation.trim().toLowerCase();\n        const specimen_type = $field.trim().toLowerCase();\n        \n        if (designation === \"normal\"){\n            const validTypes = [\"normal\", \"normal - tissue adjacent to primary tumour\", \"cell line - derived from normal\"];\n            if (!validTypes.includes(specimen_type)){\n                result = {valid: false, message: \"Invalid specimen_type. Specimen_type can only be set to a normal type value (Normal, Normal - tissue adjacent to primary tumour, or Cell line - derived from normal) when tumour_normal_designation is set to Normal.\"};\n            }\n        }\n        else if (designation === \"tumour\") {\n            const invalidTypes = [\"normal\", \"cell line - derived from normal\"];\n            if (invalidTypes.includes(specimen_type)){\n                result = {valid: false, message: \"Invalid specimen_type. Specimen_type cannot be set to normal type value (Normal or Cell line - derived from normal) when tumour_normal_designation is set to Tumour.\"};\n            }\n        }\n        return result;\n    })()"]},"meta":{"validationDependency":true,"core":true}},"right":{"name":"specimen_type","valueType":"string","description":"Description of the kind of specimen that was collected with respect to tumour/normal tissue origin.","restrictions":{"required":true,"codeList":["Normal","Normal - tissue adjacent to primary tumour","Primary tumour","Primary tumour - adjacent to normal","Primary tumour - additional new primary","Recurrent tumour","Metastatic tumour","Metastatic tumour - metastasis local to lymph node","Metastatic tumour - metastasis to distant location","Metastatic tumour - additional metastatic","Xenograft - derived from primary tumour","Xenograft - derived from tumour cell line","Cell line - derived from xenograft tumour","Cell line - derived from tumour","Cell line - derived from normal"],"script":["(function validate() {\n\n        const row = $row;\n        let result = {valid: true, message: \"Ok\"};\n        \n        const designation = row.tumour_normal_designation.trim().toLowerCase();\n        const specimen_type = $field.trim().toLowerCase();\n        \n        if (designation === \"normal\"){\n            const validTypes = [\"normal\", \"normal - tissue adjacent to primary tumour\", \"cell line - derived from normal\"];\n            if (!validTypes.includes(specimen_type)){\n                result = {valid: false, message: \"Invalid specimen_type. Specimen_type can only be set to a normal type value (Normal, Normal - tissue adjacent to primary tumour, or Cell line - derived from normal) when tumour_normal_designation is set to Normal.\"};\n            }\n        }\n        else if (designation === \"tumour\") {\n            const invalidTypes = [\"normal\", \"cell line - derived from normal\"];\n            if (invalidTypes.includes(specimen_type)){\n                result = {valid: false, message: \"Invalid specimen_type. Specimen_type cannot be set to normal type value (Normal or Cell line - derived from normal) when tumour_normal_designation is set to Tumour.\"};\n            }\n        }\n        return result;\n    })()"]},"meta":{"validationDependency":true,"core":true,"displayName":"Specimen Type"}},"diff":{"meta":{"displayName":{"type":"created","data":"Specimen Type"}}}}],["sample_registration.submitter_sample_id",{"left":{"name":"submitter_sample_id","valueType":"string","description":"Unique identifier of the sample, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"hnc_12,CCG_34_94583,BRCA47832-3239"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_sample_id","valueType":"string","description":"Unique identifier of the sample, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"examples":"hnc_12,CCG_34_94583,BRCA47832-3239","displayName":"Submitter Sample ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Sample ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["sample_registration.sample_type",{"left":{"name":"sample_type","valueType":"string","description":"Description of the type of molecular sample used for testing.","meta":{"validationDependency":true,"core":true},"restrictions":{"required":true,"codeList":["Total DNA","Amplified DNA","ctDNA","Other DNA enrichments","Total RNA","Ribo-Zero RNA","polyA+ RNA","Other RNA fractions"]}},"right":{"name":"sample_type","valueType":"string","description":"Description of the type of molecular sample used for testing.","meta":{"validationDependency":true,"core":true,"displayName":"Sample Type"},"restrictions":{"required":true,"codeList":["Total DNA","Amplified DNA","ctDNA","Other DNA enrichments","Total RNA","Ribo-Zero RNA","polyA+ RNA","Other RNA fractions"]}},"diff":{"meta":{"displayName":{"type":"created","data":"Sample Type"}}}}],["donor.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"displayName":{"type":"created","data":"Program ID"}}}}],["donor.submitter_donor_id",{"left":{"description":"Unique identifier of the donor, assigned by the data provider.","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"description":"Unique identifier of the donor, assigned by the data provider.","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["donor.vital_status",{"left":{"description":"Donor's last known state of living or deceased.","name":"vital_status","restrictions":{"codeList":["Alive","Deceased","Unknown"],"required":true},"valueType":"string","meta":{"validationDependency":true,"core":true}},"right":{"description":"Donor's last known state of living or deceased.","name":"vital_status","restrictions":{"codeList":["Alive","Deceased","Unknown"],"required":true},"valueType":"string","meta":{"validationDependency":true,"core":true,"displayName":"Vital Status"}},"diff":{"meta":{"displayName":{"type":"created","data":"Vital Status"}}}}],["donor.cause_of_death",{"left":{"description":"Indicate the cause of a donor's death.","name":"cause_of_death","restrictions":{"codeList":["Died of cancer","Died of other reasons"],"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n        const currField = typeof($field) === 'string' ? $field.trim().toLowerCase() : $field;\n        const vitalStatus = $row.vital_status.trim().toLowerCase();\n    \n        if (!currField && vitalStatus === \"deceased\"){\n            result = {valid: false, message: `${$name} must be provided when the donor's vital_status is deceased.`}\n        }\n        else if (currField && vitalStatus != \"deceased\"){\n            result = {valid: false, message: `${$name} cannot be provided if the donor's vital_status is not deceased.`}\n        }\n        return result;\n    })()"]},"valueType":"string","meta":{"core":true,"dependsOn":"donor.vital_status","notes":"Cause of death is only required to be submitted if the donor's vital_status is Deceased."}},"right":{"description":"Indicate the cause of a donor's death.","name":"cause_of_death","restrictions":{"codeList":["Died of cancer","Died of other reasons"],"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n        const currField = typeof($field) === 'string' ? $field.trim().toLowerCase() : $field;\n        const vitalStatus = $row.vital_status.trim().toLowerCase();\n    \n        if (!currField && vitalStatus === \"deceased\"){\n            result = {valid: false, message: `${$name} must be provided when the donor's vital_status is deceased.`}\n        }\n        else if (currField && vitalStatus != \"deceased\"){\n            result = {valid: false, message: `${$name} cannot be provided if the donor's vital_status is not deceased.`}\n        }\n        return result;\n    })()"]},"valueType":"string","meta":{"core":true,"dependsOn":"donor.vital_status","notes":"Cause of death is only required to be submitted if the donor's vital_status is Deceased.","displayName":"Cause of Death"}},"diff":{"meta":{"displayName":{"type":"created","data":"Cause of Death"}}}}],["donor.survival_time",{"left":{"description":"Interval of how long the donor has survived since primary diagnosis, in days.","name":"survival_time","valueType":"integer","meta":{"dependsOn":"donor.vital_status","notes":"Survival_time is only required to be submitted if the donor's vital_status is Deceased.","validationDependency":true,"units":"days","core":"true"},"restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n        const currField = typeof($field) === 'string' ? $field.trim().toLowerCase() : $field;\n        const vitalStatus = $row.vital_status.trim().toLowerCase();\n    \n        if (!currField && vitalStatus === \"deceased\"){\n            result = {valid: false, message: `${$name} must be provided when the donor's vital_status is deceased.`}\n        }\n        else if (currField && vitalStatus != \"deceased\"){\n            result = {valid: false, message: `${$name} cannot be provided if the donor's vital_status is not deceased.`}\n        }\n        return result;\n    })()"]}},"right":{"description":"Interval of how long the donor has survived since primary diagnosis, in days.","name":"survival_time","valueType":"integer","meta":{"dependsOn":"donor.vital_status","notes":"Survival_time is only required to be submitted if the donor's vital_status is Deceased.","validationDependency":true,"units":"days","core":"true","displayName":"Survival Time"},"restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n        const currField = typeof($field) === 'string' ? $field.trim().toLowerCase() : $field;\n        const vitalStatus = $row.vital_status.trim().toLowerCase();\n    \n        if (!currField && vitalStatus === \"deceased\"){\n            result = {valid: false, message: `${$name} must be provided when the donor's vital_status is deceased.`}\n        }\n        else if (currField && vitalStatus != \"deceased\"){\n            result = {valid: false, message: `${$name} cannot be provided if the donor's vital_status is not deceased.`}\n        }\n        return result;\n    })()"]}},"diff":{"meta":{"displayName":{"type":"created","data":"Survival Time"}}}}],["donor.prior_malignancy",{"left":{"description":"Prior malignancy affecting donor.","name":"prior_malignancy","restrictions":{"codeList":["Yes","No","Unknown"]},"valueType":"string"},"right":{"description":"Prior malignancy affecting donor.","name":"prior_malignancy","restrictions":{"codeList":["Yes","No","Unknown"]},"valueType":"string","meta":{"displayName":"Prior Malignancy","examples":"C41.1, C16.9, C00.5, D46.9"}},"diff":{"meta":{"type":"created","data":{"displayName":"Prior Malignancy","examples":"C41.1, C16.9, C00.5, D46.9"}}}}],["donor.cancer_type_prior_malignancy",{"left":{"description":"ICD-10 diagnostic code for type of cancer in a prior malignancy.","name":"cancer_type_prior_malignancy","restrictions":{"regex":"[A-Z]{1}[0-9]{2}.[0-9]{0,3}[A-Z]{0,1}$"},"valueType":"string"},"right":{"description":"The code to represent the cancer type of a prior malignancy using the WHO ICD-10 code (https://icd.who.int/browse10/2019/en) classification.","name":"cancer_type_prior_malignancy","restrictions":{"regex":"^[C|D][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$"},"valueType":"string","meta":{"displayName":"Cancer Type Prior Malignancy"}},"diff":{"description":{"type":"updated","data":"The code to represent the cancer type of a prior malignancy using the WHO ICD-10 code (https://icd.who.int/browse10/2019/en) classification."},"restrictions":{"regex":{"type":"updated","data":"^[C|D][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$"}},"meta":{"type":"created","data":{"displayName":"Cancer Type Prior Malignancy"}}}}],["donor.age_at_prior_malignancy",{"left":{"description":"If donor has history of prior malignancy, indicate age at previous diagnosis, in years.","name":"age_at_prior_malignancy","valueType":"integer"},"right":{"description":"If donor has history of prior malignancy, indicate age at previous diagnosis, in years.","name":"age_at_prior_malignancy","valueType":"integer","meta":{"displayName":"Age at Prior Malignancy"}},"diff":{"meta":{"type":"created","data":{"displayName":"Age at Prior Malignancy"}}}}],["donor.laterality_of_prior_malignancy",{"left":{"description":"If donor has history of prior malignancy, indicate laterality of previous diagnosis.","name":"laterality_of_prior_malignancy","valueType":"string"},"right":{"description":"If donor has history of prior malignancy, indicate laterality of previous diagnosis.","name":"laterality_of_prior_malignancy","valueType":"string","meta":{"displayName":"Laterality at Prior Malignancy"}},"diff":{"meta":{"type":"created","data":{"displayName":"Laterality at Prior Malignancy"}}}}],["donor.height",{"left":{"description":"Indicate the donor's height, in centimeters (cm).","name":"height","valueType":"integer"},"right":{"description":"Indicate the donor's height, in centimeters (cm).","name":"height","valueType":"integer","meta":{"displayName":"Height"}},"diff":{"meta":{"type":"created","data":{"displayName":"Height"}}}}],["donor.weight",{"left":{"description":"Indicate the donor's weight, in kilograms (kg).","name":"weight","valueType":"integer"},"right":{"description":"Indicate the donor's weight, in kilograms (kg).","name":"weight","valueType":"integer","meta":{"displayName":"Weight"}},"diff":{"meta":{"type":"created","data":{"displayName":"Weight"}}}}],["donor.bmi",{"left":{"description":"Indicate the donor's Body Mass Index (BMI) in kg/m².","name":"bmi","valueType":"integer"},"right":{"description":"Indicate the donor's Body Mass Index (BMI) in kg/m².","name":"bmi","valueType":"integer","meta":{"displayName":"BMI"}},"diff":{"meta":{"type":"created","data":{"displayName":"BMI"}}}}],["donor.menopause_status",{"left":{"description":"Indicate the donor's menopause status at the time of primary diagnosis.","name":"menopause_status","restrictions":{"codeList":["Premenopausal","Perimenopausal","Postmenopausal","Indeterminate or unknown","Not applicable"]},"valueType":"string"},"right":{"description":"Indicate the donor's menopause status at the time of primary diagnosis. (Codelist reference: NCI CDE ID: 2434914)","name":"menopause_status","restrictions":{"codeList":["Indeterminate or unknown","Not applicable","Perimenopausal","Postmenopausal","Premenopausal"]},"valueType":"string","meta":{"displayName":"Menopause Status"}},"diff":{"description":{"type":"updated","data":"Indicate the donor's menopause status at the time of primary diagnosis. (Codelist reference: NCI CDE ID: 2434914)"},"meta":{"type":"created","data":{"displayName":"Menopause Status"}}}}],["donor.age_at_menarche",{"left":{"description":"Indicate the donor's age of menarche, the first occurrence of menstruation.","name":"age_at_menarche","valueType":"integer"},"right":{"description":"Indicate the donor's age of menarche, the first occurrence of menstruation.","name":"age_at_menarche","valueType":"integer","meta":{"displayName":"Age at Menarche"}},"diff":{"meta":{"type":"created","data":{"displayName":"Age at Menarche"}}}}],["donor.number_of_pregnancies",{"left":{"description":"Indicate the number of pregnancies a donor has had.","name":"number_of_pregnancies","valueType":"integer"},"right":{"description":"Indicate the number of pregnancies a donor has had.","name":"number_of_pregnancies","valueType":"integer","meta":{"displayName":"Number of Pregnancies"}},"diff":{"meta":{"type":"created","data":{"displayName":"Number of Pregnancies"}}}}],["donor.number_of_children",{"left":{"description":"Indicate the number of children the donor has birthed.","name":"number_of_children","valueType":"integer"},"right":{"description":"Indicate the number of children the donor has birthed.","name":"number_of_children","valueType":"integer","meta":{"displayName":"Number of Children"}},"diff":{"meta":{"type":"created","data":{"displayName":"Number of Children"}}}}],["specimen.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"displayName":{"type":"created","data":"Program ID"}}}}],["specimen.submitter_donor_id",{"left":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["specimen.submitter_specimen_id",{"left":{"name":"submitter_specimen_id","description":"Unique identifier of the specimen, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_specimen_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_specimen_id","description":"Unique identifier of the specimen, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_specimen_id","displayName":"Submitter Specimen ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Specimen ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["specimen.pathological_tumour_staging_system",{"left":{"name":"pathological_tumour_staging_system","description":"Specify the tumour staging system used to assess the cancer at the time the tumour specimen was resected. Pathological classification is based on the clinical stage information (acquired before treatment) and supplemented/modified by operative findings and pathological evaluation of the resected specimen.","valueType":"string","meta":{"core":true},"restrictions":{"script":["(function validate() {\n\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* This is not a required field, so first ensure that it exists */\n        if ($field){\n            /* Contingent on the naming system for tumour staging systems to remain consistent */\n            const stagingName = $name.trim().toLowerCase().split('_tumour_staging_system')[0];\n            /* Perform validation only if an AJCC value was selected */\n            if (/^(AJCC)\\b/i.test($field)){\n                const requiredFields = [\n                    `${stagingName}_m_category`,\n                    `${stagingName}_n_category`,\n                    `${stagingName}_t_category`\n                ];\n                const convertedRow = Object.fromEntries(Object.entries($row).map(([fieldName,fieldVal]) => [fieldName.toLowerCase(), fieldVal]));\n                /* Check for contigous spaces wrapped with quotes (empty strings) */\n                const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n                /* search for fields with falsy values, given the field exists */\n                const emptyFields = requiredFields.filter(field => Object.keys(convertedRow).includes(field) && (!convertedRow[field] || checkforEmpty(convertedRow[field])))\n                if (emptyFields.length){\n                    result = {valid: false, \"message\": `The following fields are required when ${$name} is set to an AJCC option: ${emptyFields}`};\n                }\n            }\n        }\n        return result;\n    })()"],"required":true,"codeList":["Binet","Rai","FIGO","Ann Arbor","Murphy","Lugano","AJCC 8th Edition","AJCC 7th Edition","AJCC 6th Edition","AJCC 5th Edition","AJCC 4th Edition","AJCC 3rd Edition","AJCC 2nd Edition","AJCC 1st Edition"]}},"right":{"name":"pathological_tumour_staging_system","description":"Specify the tumour staging system used to assess the cancer at the time the tumour specimen was resected. Pathological classification is based on the clinical stage information (acquired before treatment) and supplemented/modified by operative findings and pathological evaluation of the resected specimen.","valueType":"string","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","displayName":"Pathological Tumour Staging System"},"restrictions":{"script":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"],"codeList":["Binet","Rai","FIGO","Ann Arbor","Murphy","Lugano","AJCC 8th Edition","AJCC 7th Edition","AJCC 6th Edition","AJCC 5th Edition","AJCC 4th Edition","AJCC 3rd Edition","AJCC 2nd Edition","AJCC 1st Edition"]}},"diff":{"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Pathological Tumour Staging System"}},"restrictions":{"script":{"type":"updated","data":{"added":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"],"deleted":["(function validate() {\n\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* This is not a required field, so first ensure that it exists */\n        if ($field){\n            /* Contingent on the naming system for tumour staging systems to remain consistent */\n            const stagingName = $name.trim().toLowerCase().split('_tumour_staging_system')[0];\n            /* Perform validation only if an AJCC value was selected */\n            if (/^(AJCC)\\b/i.test($field)){\n                const requiredFields = [\n                    `${stagingName}_m_category`,\n                    `${stagingName}_n_category`,\n                    `${stagingName}_t_category`\n                ];\n                const convertedRow = Object.fromEntries(Object.entries($row).map(([fieldName,fieldVal]) => [fieldName.toLowerCase(), fieldVal]));\n                /* Check for contigous spaces wrapped with quotes (empty strings) */\n                const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n                /* search for fields with falsy values, given the field exists */\n                const emptyFields = requiredFields.filter(field => Object.keys(convertedRow).includes(field) && (!convertedRow[field] || checkforEmpty(convertedRow[field])))\n                if (emptyFields.length){\n                    result = {valid: false, \"message\": `The following fields are required when ${$name} is set to an AJCC option: ${emptyFields}`};\n                }\n            }\n        }\n        return result;\n    })()"]}},"required":{"type":"deleted","data":true}}}}],["specimen.pathological_t_category",{"left":{"name":"pathological_t_category","description":"The code to represent the stage of cancer defined by the size or contiguous extension of the primary tumour (T), according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.pathological_tumour_staging_system","notes":"This field is required only if the selected pathological_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"pathological_t_category","description":"The code to represent the stage of cancer defined by the size or contiguous extension of the primary tumour (T), according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.pathological_tumour_staging_system","notes":"This field is required only if the selected pathological_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Pathological T Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Pathological T Category"}}}}],["specimen.pathological_n_category",{"left":{"name":"pathological_n_category","description":"The code to represent the stage of cancer defined by whether or not the cancer has reached nearby lymph nodes (N), according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.pathological_tumour_staging_system","notes":"This field is required only if the selected pathological_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"pathological_n_category","description":"The code to represent the stage of cancer defined by whether or not the cancer has reached nearby lymph nodes (N), according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.pathological_tumour_staging_system","notes":"This field is required only if the selected pathological_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Pathological N Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Pathological N Category"}}}}],["specimen.pathological_m_category",{"left":{"name":"pathological_m_category","description":"The code to represent the stage of cancer defined by whether there are distant metastases (M), meaning spread of cancer to other parts of the body, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.pathological_tumour_staging_system","notes":"This field is required only if the selected pathological_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"pathological_m_category","description":"The code to represent the stage of cancer defined by whether there are distant metastases (M), meaning spread of cancer to other parts of the body, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.pathological_tumour_staging_system","notes":"This field is required only if the selected pathological_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Pathological M Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Pathological M Category"}}}}],["specimen.pathological_stage_group",{"left":{"name":"pathological_stage_group","description":"Specify the tumour stage, based on tumor_staging_system, used to assess the cancer at the time the tumour specimen was resected.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.pathological_tumour_staging_system"},"restrictions":{"required":true}},"right":{"name":"pathological_stage_group","description":"Specify the tumour stage, based on tumour_staging_system, used to assess the cancer at the time the tumour specimen was resected.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.pathological_tumour_staging_system","notes":"This field depends on the selected pathological staging system, and is only required if the specimen is a tumour.","displayName":"Pathological Stage Group"}},"diff":{"description":{"type":"updated","data":"Specify the tumour stage, based on tumour_staging_system, used to assess the cancer at the time the tumour specimen was resected."},"meta":{"notes":{"type":"created","data":"This field depends on the selected pathological staging system, and is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Pathological Stage Group"}},"restrictions":{"type":"deleted","data":{"required":true}}}}],["specimen.specimen_acquisition_interval",{"left":{"name":"specimen_acquisition_interval","description":"Interval between primary diagnosis and specimen acquisition, in days.","valueType":"integer","meta":{"validationDependency":true,"units":"days","core":true},"restrictions":{"required":true}},"right":{"name":"specimen_acquisition_interval","description":"Interval between primary diagnosis and specimen acquisition, in days.","valueType":"integer","meta":{"validationDependency":true,"units":"days","core":true,"notes":"The associated Primary Diagnosis is used as the reference point for this interval. To calculate this, find the number of days since the date of primary diagnosis.","displayName":"Specimen Aquisition Interval"},"restrictions":{"required":true}},"diff":{"meta":{"notes":{"type":"created","data":"The associated Primary Diagnosis is used as the reference point for this interval. To calculate this, find the number of days since the date of primary diagnosis."},"displayName":{"type":"created","data":"Specimen Aquisition Interval"}}}}],["specimen.tumour_histological_type",{"left":{"name":"tumour_histological_type","description":"The code to represent the histology (morphology) of neoplasms that is usually obtained from a pathology report, according to the International Classification of Diseases for Oncology, 3rd Edition (WHO ICD-O-3).","valueType":"string","meta":{"core":true},"restrictions":{"required":true,"regex":"M-[0-9]{4}/[0-9]{2}$"}},"right":{"name":"tumour_histological_type","description":"The code to represent the histology (morphology) of neoplasms that is usually obtained from a pathology report, according to the International Classification of Diseases for Oncology, 3rd Edition (WHO ICD-O-3). Please refer to the guidelines provided in the ICD-O-3 manual at https://apps.who.int/iris/handle/10665/42344.","valueType":"string","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","examples":"8260/3,9691/36","displayName":"Tumour Histological Type"},"restrictions":{"regex":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$"}},"diff":{"description":{"type":"updated","data":"The code to represent the histology (morphology) of neoplasms that is usually obtained from a pathology report, according to the International Classification of Diseases for Oncology, 3rd Edition (WHO ICD-O-3). Please refer to the guidelines provided in the ICD-O-3 manual at https://apps.who.int/iris/handle/10665/42344."},"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"examples":{"type":"created","data":"8260/3,9691/36"},"displayName":{"type":"created","data":"Tumour Histological Type"}},"restrictions":{"required":{"type":"deleted","data":true},"regex":{"type":"updated","data":"^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$"}}}}],["specimen.specimen_anatomic_location",{"left":{"name":"specimen_anatomic_location","description":"Anatomic location of a specimen when it was collected.","valueType":"string","meta":{"core":true},"restrictions":{"required":true,"codeList":["Abdomen","Abdominal wall","Acetabulum","Adenoid","Adipose","Adrenal","Adrenal gland","Alveolar ridge","Amniotic fluid","Ampulla of Vater","Anal sphincter","Ankle","Anorectum","Antecubital fossa","Antrum","Anus","Aorta","Aortic body","Appendix","Aqueous fluid","Arm","Artery","Ascending colon","Ascending colon hepatic flexure","Ascites","Auditory canal","Autonomic nervous system","Axilla","Back","Bile duct","Bladder","Blood","Blood vessel","Bone","Bone marrow","Bowel","Brain","Brain stem","Breast","Broad ligament","Bronchiole","Bronchus","Brow","Buccal cavity","Buccal mucosa","Buttock","Calf","Capillary","Cardia","Carina","Carotid artery","Carotid body","Cartilage","Cecum","Cell-line","Central nervous system","Cerebellum","Cerebral cortex","Cerebrospinal fluid","Cerebrum","Cervical spine","Cervix","Chest","Chest wall","Chin","Clavicle","Clitoris","CNS/spinal","Colon","Colon - mucosa only","Colorectal","Common duct","Conjunctiva","Connective tissue","Dermal","Descending colon","Diaphragm","Duodenum","Ear","Ear canal","Ear, pinna (external)","Effusion","Elbow","Endocrine gland","Epididymis","Epidural space","Esophageal; distal","Esophageal; mid","Esophageal; proximal","Esophagogastric junction","Esophagus","Esophagus - mucosa only","Eye","Fallopian tube","Femoral artery","Femoral vein","Femur","Fibroblasts","Fibula","Finger","Floor of mouth","Fluid","Foot","Forearm","Forehead","Foreskin","Frontal cortex","Frontal lobe","Fundus of stomach","Gallbladder","Ganglia","Gastroesophageal junction","Gastrointestinal tract","Groin","Gum","Hand","Hard palate","Head - face or neck, NOS","Head and neck","Heart","Hepatic","Hepatic duct","Hepatic flexure","Hepatic vein","Hip","Hippocampus","Humerus","Hypopharynx","Ileum","Ilium","Index finger","Ischium","Islet cells","Jaw","Jejunum","Joint","Kidney","Knee","Lacrimal gland","Large bowel","Laryngopharynx","Larynx","Leg","Leptomeninges","Ligament","Lip","Liver","Lumbar spine","Lung","Lymph node","Lymph node(s) axilla","Lymph node(s) cervical","Lymph node(s) distant","Lymph node(s) epitrochlear","Lymph node(s) femoral","Lymph node(s) hilar","Lymph node(s) iliac-common","Lymph node(s) iliac-external","Lymph node(s) inguinal","Lymph node(s) internal mammary","Lymph node(s) mammary","Lymph node(s) mesenteric","Lymph node(s) occipital","Lymph node(s) paraaortic","Lymph node(s) parotid","Lymph node(s) pelvic","Lymph node(s) popliteal","Lymph node(s) regional","Lymph node(s) retroperitoneal","Lymph node(s) scalene","Lymph node(s) splenic","Lymph node(s) subclavicular","Lymph node(s) submandibular","Lymph node(s) supraclavicular","Lymph nodes(s) mediastinal","Mandible","Maxilla","Mediastinal soft tissue","Mediastinum","Mesentery","Mesothelium","Middle finger","Mitochondria","Muscle","Nails","Nasal cavity","Nasal soft tissue","Nasopharynx","Neck","Nerve","Nerve(s) cranial","Occipital cortex","Ocular orbits","Omentum","Oral cavity","Oral cavity - mucosa only","Oropharynx","Other","Ovary","Palate","Pancreas","Paraspinal ganglion","Parathyroid","Parotid gland","Patella","Pelvis","Penis","Pericardium","Periorbital soft tissue","Peritoneal cavity","Peritoneum","Pharynx","Pineal","Pineal gland","Pituitary gland","Placenta","Pleura","Pleural effusion","Popliteal fossa","Prostate","Pylorus","Rectosigmoid junction","Rectum","Retina","Retro-orbital region","Retroperitoneum","Rib","Ring finger","Round ligament","Sacrum","Salivary gland","Scalp","Scapula","Sciatic nerve","Scrotum","Seminal vesicle","Shoulder","Sigmoid colon","Sinus","Sinus(es), maxillary","Skeletal muscle","Skin","Skull","Small bowel","Small bowel - mucosa only","Small finger","Soft tissue","Spinal column","Spinal cord","Spleen","Splenic flexure","Sternum","Stomach","Stomach - mucosa only","Subcutaneous tissue","Synovium","Temporal cortex","Tendon","Testis","Thigh","Thoracic spine","Thorax","Throat","Thumb","Thymus","Thyroid","Tibia","Tongue","Tonsil","Tonsil (pharyngeal)","Trachea / major bronchi","Transverse colon","Trunk","Umbilical cord","Ureter","Urethra","Urinary tract","Uterus","Uvula","Vagina","Vas deferens","Vein","Venous","Vertebra","Vulva","White blood cells","Wrist"]}},"right":{"name":"specimen_anatomic_location","description":"Anatomic location of a specimen when it was collected.","valueType":"string","meta":{"core":true,"displayName":"Specimen Anatomic Location"},"restrictions":{"required":true,"codeList":["Abdomen","Abdominal wall","Acetabulum","Adenoid","Adipose","Adrenal","Adrenal gland","Alveolar ridge","Amniotic fluid","Ampulla of Vater","Anal sphincter","Ankle","Anorectum","Antecubital fossa","Antrum","Anus","Aorta","Aortic body","Appendix","Aqueous fluid","Arm","Artery","Ascending colon","Ascending colon hepatic flexure","Ascites","Auditory canal","Autonomic nervous system","Axilla","Back","Bile duct","Bladder","Blood","Blood vessel","Bone","Bone marrow","Bowel","Brain","Brain stem","Breast","Broad ligament","Bronchiole","Bronchus","Brow","Buccal cavity","Buccal mucosa","Buttock","Calf","Capillary","Cardia","Carina","Carotid artery","Carotid body","Cartilage","Cecum","Cell-line","Central nervous system","Cerebellum","Cerebral cortex","Cerebrospinal fluid","Cerebrum","Cervical spine","Cervix","Chest","Chest wall","Chin","Clavicle","Clitoris","CNS/spinal","Colon","Colon - mucosa only","Colorectal","Common duct","Conjunctiva","Connective tissue","Dermal","Descending colon","Diaphragm","Duodenum","Ear","Ear canal","Ear - pinna (external)","Effusion","Elbow","Endocrine gland","Epididymis","Epidural space","Esophageal - distal","Esophageal - mid","Esophageal - proximal","Esophagogastric junction","Esophagus","Esophagus - mucosa only","Eye","Fallopian tube","Femoral artery","Femoral vein","Femur","Fibroblasts","Fibula","Finger","Floor of mouth","Fluid","Foot","Forearm","Forehead","Foreskin","Frontal cortex","Frontal lobe","Fundus of stomach","Gallbladder","Ganglia","Gastroesophageal junction","Gastrointestinal tract","Groin","Gum","Hand","Hard palate","Head - face or neck NOS","Head and neck","Heart","Hepatic","Hepatic duct","Hepatic flexure","Hepatic vein","Hip","Hippocampus","Humerus","Hypopharynx","Ileum","Ilium","Index finger","Ischium","Islet cells","Jaw","Jejunum","Joint","Kidney","Knee","Lacrimal gland","Large bowel","Laryngopharynx","Larynx","Leg","Leptomeninges","Ligament","Lip","Liver","Lumbar spine","Lung","Lymph node","Lymph node(s) axilla","Lymph node(s) cervical","Lymph node(s) distant","Lymph node(s) epitrochlear","Lymph node(s) femoral","Lymph node(s) hilar","Lymph node(s) iliac-common","Lymph node(s) iliac-external","Lymph node(s) inguinal","Lymph node(s) internal mammary","Lymph node(s) mammary","Lymph node(s) mesenteric","Lymph node(s) occipital","Lymph node(s) paraaortic","Lymph node(s) parotid","Lymph node(s) pelvic","Lymph node(s) popliteal","Lymph node(s) regional","Lymph node(s) retroperitoneal","Lymph node(s) scalene","Lymph node(s) splenic","Lymph node(s) subclavicular","Lymph node(s) submandibular","Lymph node(s) supraclavicular","Lymph nodes(s) mediastinal","Mandible","Maxilla","Mediastinal soft tissue","Mediastinum","Mesentery","Mesothelium","Middle finger","Mitochondria","Muscle","Nails","Nasal cavity","Nasal soft tissue","Nasopharynx","Neck","Nerve","Nerve(s) cranial","Occipital cortex","Ocular orbits","Omentum","Oral cavity","Oral cavity - mucosa only","Oropharynx","Other","Ovary","Palate","Pancreas","Paraspinal ganglion","Parathyroid","Parotid gland","Patella","Pelvis","Penis","Pericardium","Periorbital soft tissue","Peritoneal cavity","Peritoneum","Pharynx","Pineal","Pineal gland","Pituitary gland","Placenta","Pleura","Pleural effusion","Popliteal fossa","Prostate","Pylorus","Rectosigmoid junction","Rectum","Retina","Retro-orbital region","Retroperitoneum","Rib","Ring finger","Round ligament","Sacrum","Salivary gland","Scalp","Scapula","Sciatic nerve","Scrotum","Seminal vesicle","Shoulder","Sigmoid colon","Sinus","Sinus(es) - maxillary","Skeletal muscle","Skin","Skull","Small bowel","Small bowel - mucosa only","Small finger","Soft tissue","Spinal column","Spinal cord","Spleen","Splenic flexure","Sternum","Stomach","Stomach - mucosa only","Subcutaneous tissue","Synovium","Temporal cortex","Tendon","Testis","Thigh","Thoracic spine","Thorax","Throat","Thumb","Thymus","Thyroid","Tibia","Tongue","Tonsil","Tonsil (pharyngeal)","Trachea / major bronchi","Transverse colon","Trunk","Umbilical cord","Ureter","Urethra","Urinary tract","Uterus","Uvula","Vagina","Vas deferens","Vein","Venous","Vertebra","Vulva","White blood cells","Wrist"]}},"diff":{"meta":{"displayName":{"type":"created","data":"Specimen Anatomic Location"}},"restrictions":{"codeList":{"type":"updated","data":{"added":["Ear - pinna (external)","Esophageal - distal","Esophageal - mid","Esophageal - proximal","Head - face or neck NOS","Sinus(es) - maxillary"],"deleted":["Ear, pinna (external)","Esophageal; distal","Esophageal; mid","Esophageal; proximal","Head - face or neck, NOS","Sinus(es), maxillary"]}}}}}],["specimen.specimen_processing",{"left":{"name":"specimen_processing","description":"Indicate the technique used to process specimen.","valueType":"string","restrictions":{"codeList":["Cryopreservation in liquid nitrogen (dead tissue)","Cryopreservation in dry ice (dead tissue)","Cryopreservation of live cells in liquid nitrogen","Cryopreservation, other","Formalin fixed & paraffin embedded","Formalin fixed, buffered","Formalin fixed, unbuffered","Fresh","Other"]}},"right":{"name":"specimen_processing","description":"Indicate the technique used to process specimen.","valueType":"string","restrictions":{"codeList":["Cryopreservation in liquid nitrogen (dead tissue)","Cryopreservation in dry ice (dead tissue)","Cryopreservation of live cells in liquid nitrogen","Cryopreservation - other","Formalin fixed & paraffin embedded","Formalin fixed - buffered","Formalin fixed - unbuffered","Fresh","Other"]},"meta":{"displayName":"Specimen Processing"}},"diff":{"restrictions":{"codeList":{"type":"updated","data":{"added":["Cryopreservation - other","Formalin fixed - buffered","Formalin fixed - unbuffered"],"deleted":["Cryopreservation, other","Formalin fixed, buffered","Formalin fixed, unbuffered"]}}},"meta":{"type":"created","data":{"displayName":"Specimen Processing"}}}}],["specimen.specimen_storage",{"left":{"name":"specimen_storage","description":"Indicate the method of specimen storage for specimens that were not extracted freshly or immediately cultured.","valueType":"string","meta":{"notes":"For specimens that were freshly extracted or immediately cultured, select Not Applicable."},"restrictions":{"codeList":["Cut slide","Frozen, -70 freezer","Frozen, liquid nitrogen","Frozen, vapor phase","Not Applicable","Other","Paraffin block","RNA later frozen"]}},"right":{"name":"specimen_storage","description":"Indicate the method of specimen storage for specimens that were not extracted freshly or immediately cultured.","valueType":"string","meta":{"notes":"For specimens that were freshly extracted or immediately cultured, select Not Applicable.","displayName":"Specimen Storage"},"restrictions":{"codeList":["Cut slide","Frozen in -70 freezer","Frozen in liquid nitrogen","Frozen in vapour phase","Not Applicable","Other","Paraffin block","RNA later frozen"]}},"diff":{"meta":{"displayName":{"type":"created","data":"Specimen Storage"}},"restrictions":{"codeList":{"type":"updated","data":{"added":["Frozen in -70 freezer","Frozen in liquid nitrogen","Frozen in vapour phase"],"deleted":["Frozen, -70 freezer","Frozen, liquid nitrogen","Frozen, vapor phase"]}}}}}],["specimen.central_pathology_confirmed",{"left":{"name":"central_pathology_confirmed","description":"Indicate whether the histologic description of tissue or cells was confirmed by a pathology review of frozen or formalin fixed slide(s) completed after the diagnostic pathology review of the tumour sample used to extract analyte(s).","valueType":"string","meta":{"core":true},"restrictions":{"required":true,"codeList":["Yes","No","Unknown"]}},"right":{"name":"central_pathology_confirmed","description":"Indicate whether the histologic description of tissue or cells was confirmed by a pathology review of frozen or formalin fixed slide(s) completed after the diagnostic pathology review of the tumour sample used to extract analyte(s).","valueType":"string","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","displayName":"Central Pathology Confirmed"},"restrictions":{"codeList":["Yes","No","Unknown"]}},"diff":{"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Central Pathology Confirmed"}},"restrictions":{"required":{"type":"deleted","data":true}}}}],["specimen.tumour_grading_system",{"left":{"name":"tumour_grading_system","description":"Specify the tumour staging system used to assess the description of a tumour based on how abnormal the tumour cells and the tumour tissue look under a microscope. Tumour grade is an indicator of how quickly a tumour is likely to  grow.","valueType":"string","meta":{"core":true},"restrictions":{"required":true,"codeList":["Default","Gleason","Nottingham","Brain cancer","ISUP","Lymphoid neoplasms"]}},"right":{"name":"tumour_grading_system","description":"Specify the tumour staging system used to assess the description of a tumour based on how abnormal the tumour cells and the tumour tissue look under a microscope. Tumour grade is an indicator of how quickly a tumour is likely to grow.","valueType":"string","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","displayName":"Tumour Grading System"},"restrictions":{"codeList":["Two-tier grading system","Three-tier grading system","Four-tier grading system","Grading system for GISTs","Grading system for GNETs","ISUP grading system","WHO grading system for CNS tumours","FNCLCC grading system","Gleason grade group system","Scarff-Bloom-Richardson grading system","Nuclear grading system for DCIS"]}},"diff":{"description":{"type":"updated","data":"Specify the tumour staging system used to assess the description of a tumour based on how abnormal the tumour cells and the tumour tissue look under a microscope. Tumour grade is an indicator of how quickly a tumour is likely to grow."},"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Tumour Grading System"}},"restrictions":{"required":{"type":"deleted","data":true},"codeList":{"type":"updated","data":{"added":["Two-tier grading system","Three-tier grading system","Four-tier grading system","Grading system for GISTs","Grading system for GNETs","ISUP grading system","WHO grading system for CNS tumours","FNCLCC grading system","Gleason grade group system","Scarff-Bloom-Richardson grading system","Nuclear grading system for DCIS"],"deleted":["Default","Gleason","Nottingham","Brain cancer","ISUP","Lymphoid neoplasms"]}}}}}],["specimen.tumour_grade",{"left":{"name":"tumour_grade","description":"Grade of the tumour as assigned by the reporting tumour_grading_system.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.tumour_grading_system","notes":"This field depends on the selected tumour grading system."},"restrictions":{"required":true,"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n        let codeList = [];\n        switch ($row.tumour_grading_system.trim().toLowerCase()) {\n            case 'default':\n                codeList = [\n                    'gx - cannot be assessed',\n                    'g1 well differentiated/low grade',\n                    'g2 moderately differentiated/intermediated grade',\n                    'g3 poorly differentiated/high grade',\n                    'g4 undifferentiated/high grade'\n                ];\n                break;\n            case 'gleason':\n                codeList = [\n                    'gleason x: gleason score cannot be determined',\n                    'gleason 2–6: the tumor tissue is well differentiated',\n                    'gleason 7: the tumor tissue is moderately differentiated',\n                    'gleason 8–10: the tumor tissue is poorly differentiated or undifferentiated'\n                ];\n                break;\n            case 'nottingham':\n                codeList = [\n                    'g1 (low grade or well differentiated)',\n                    'g2 (intermediate grade or moderately differentiated)',\n                    'g3 (high grade or poorly differentiated)'\n                ];\n                break;\n            case 'brain cancer':\n                codeList = [\n                    'grade i',\n                    'grade ii',\n                    'grade iii',\n                    'grade iv'\n                ];\n                break;\n            case 'isup for renal cell carcinoma':\n                codeList = [\n                    'grade 1: tumor cell nucleoli invisible or small and basophilic at 400 x magnification',\n                    'grade 2: tumor cell nucleoli conspicuous at 400 x magnification but inconspicuous at 100 x magnification',\n                    'grade 3: tumor cell nucleoli eosinophilic and clearly visible at 100 x magnification',\n                    'grade 4: tumors showing extreme nuclear pleomorphism and/or containing tumor giant cells and/or the presence of any proportion of tumor showing sarcomatoid and/or rhabdoid dedifferentiation'\n                ];\n                break;\n            case 'lymphoid neoplasms':\n                codeList = [\n                    'low grade or indolent nhl',\n                    'high grade or aggressive nhl'\n                ];\n                break;\n            default:\n                codelist = [];\n        }\n\n        if (!codeList.includes($field.trim().toLowerCase()) && codeList.length){\n            const msg = `'${$field}' is not a permissible value. When 'tumour_grading_system' is set to '${$row.tumour_grading_system}', 'tumour_grade' must be one of the following: \\n${codeList.join(\"\\n\")}`;\n\n            result.valid = false;\n            result.message = msg;\n        }\n        return result;\n    })()"]}},"right":{"name":"tumour_grade","description":"Grade of the tumour as assigned by the reporting tumour_grading_system.","valueType":"string","meta":{"core":true,"dependsOn":"specimen.tumour_grading_system","notes":"This field depends on the selected tumour grading system, and is only required if the specimen is a tumour.","displayName":"Tumour Grade"},"restrictions":{"codeList":["Low grade","High grade","GX","G1","G2","G3","G4","Low","High","I","II","III","IV","1","2","3","4","5"],"script":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    if ($row.tumour_grading_system && $field) {\n      let codeList = [];\n      const tieredGradingList = ['gx','g1','g2','g3'];\n      switch ($row.tumour_grading_system && $row.tumour_grading_system.trim().toLowerCase()) {\n        case 'two-tier grading system':\n          codeList = [\n            'low grade',\n            'high grade',\n          ];\n          break;\n        case 'three-tier grading system':\n          codeList = tieredGradingList;\n          break;\n        case 'four-tier grading system':\n          codeList = [\n            'gx',\n            'g1',\n            'g2',\n            'g3',\n            'g4',\n          ];\n          break;\n        case 'grading system for gists':\n          codeList = [\n            'low',\n            'high',\n          ];\n          break;\n        case 'grading system for gnets':\n          codeList = tieredGradingList;\n          break;\n        case 'isup grading system':\n          codeList = [\n            'gx',\n            'g1',\n            'g2',\n            'g3',\n            'g4',\n          ];\n          break;\n        case 'who grading system for cns tumours':\n          codeList = [\n            'i',\n            'ii',\n            'iii',\n            'iv',\n          ];\n          break;\n        case 'fnclcc grading system':\n          codeList = tieredGradingList;\n          break;\n        case 'gleason grade group system':\n          codeList = [\n            '1',\n            '2',\n            '3',\n            '4',\n            '5',\n          ];\n          break;\n        case 'scarff-bloom-richardson grading system':\n          codeList = tieredGradingList;\n          break;\n        case 'nuclear grading system for dcis':\n          codeList = tieredGradingList;\n          break;\n        default:\n          codelist = [];\n      }\n\n      if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n        const msg = `'${$field}' is not a permissible value. When 'tumour_grading_system' is set to '${\n          $row.tumour_grading_system\n        }', 'tumour_grade' must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`;\n\n        result.valid = false;\n        result.message = msg;\n      }\n    }\n    return result;\n  })()"]}},"diff":{"meta":{"notes":{"type":"updated","data":"This field depends on the selected tumour grading system, and is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Tumour Grade"}},"restrictions":{"required":{"type":"deleted","data":true},"script":{"type":"updated","data":{"added":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    if ($row.tumour_grading_system && $field) {\n      let codeList = [];\n      const tieredGradingList = ['gx','g1','g2','g3'];\n      switch ($row.tumour_grading_system && $row.tumour_grading_system.trim().toLowerCase()) {\n        case 'two-tier grading system':\n          codeList = [\n            'low grade',\n            'high grade',\n          ];\n          break;\n        case 'three-tier grading system':\n          codeList = tieredGradingList;\n          break;\n        case 'four-tier grading system':\n          codeList = [\n            'gx',\n            'g1',\n            'g2',\n            'g3',\n            'g4',\n          ];\n          break;\n        case 'grading system for gists':\n          codeList = [\n            'low',\n            'high',\n          ];\n          break;\n        case 'grading system for gnets':\n          codeList = tieredGradingList;\n          break;\n        case 'isup grading system':\n          codeList = [\n            'gx',\n            'g1',\n            'g2',\n            'g3',\n            'g4',\n          ];\n          break;\n        case 'who grading system for cns tumours':\n          codeList = [\n            'i',\n            'ii',\n            'iii',\n            'iv',\n          ];\n          break;\n        case 'fnclcc grading system':\n          codeList = tieredGradingList;\n          break;\n        case 'gleason grade group system':\n          codeList = [\n            '1',\n            '2',\n            '3',\n            '4',\n            '5',\n          ];\n          break;\n        case 'scarff-bloom-richardson grading system':\n          codeList = tieredGradingList;\n          break;\n        case 'nuclear grading system for dcis':\n          codeList = tieredGradingList;\n          break;\n        default:\n          codelist = [];\n      }\n\n      if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n        const msg = `'${$field}' is not a permissible value. When 'tumour_grading_system' is set to '${\n          $row.tumour_grading_system\n        }', 'tumour_grade' must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`;\n\n        result.valid = false;\n        result.message = msg;\n      }\n    }\n    return result;\n  })()"],"deleted":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n        let codeList = [];\n        switch ($row.tumour_grading_system.trim().toLowerCase()) {\n            case 'default':\n                codeList = [\n                    'gx - cannot be assessed',\n                    'g1 well differentiated/low grade',\n                    'g2 moderately differentiated/intermediated grade',\n                    'g3 poorly differentiated/high grade',\n                    'g4 undifferentiated/high grade'\n                ];\n                break;\n            case 'gleason':\n                codeList = [\n                    'gleason x: gleason score cannot be determined',\n                    'gleason 2–6: the tumor tissue is well differentiated',\n                    'gleason 7: the tumor tissue is moderately differentiated',\n                    'gleason 8–10: the tumor tissue is poorly differentiated or undifferentiated'\n                ];\n                break;\n            case 'nottingham':\n                codeList = [\n                    'g1 (low grade or well differentiated)',\n                    'g2 (intermediate grade or moderately differentiated)',\n                    'g3 (high grade or poorly differentiated)'\n                ];\n                break;\n            case 'brain cancer':\n                codeList = [\n                    'grade i',\n                    'grade ii',\n                    'grade iii',\n                    'grade iv'\n                ];\n                break;\n            case 'isup for renal cell carcinoma':\n                codeList = [\n                    'grade 1: tumor cell nucleoli invisible or small and basophilic at 400 x magnification',\n                    'grade 2: tumor cell nucleoli conspicuous at 400 x magnification but inconspicuous at 100 x magnification',\n                    'grade 3: tumor cell nucleoli eosinophilic and clearly visible at 100 x magnification',\n                    'grade 4: tumors showing extreme nuclear pleomorphism and/or containing tumor giant cells and/or the presence of any proportion of tumor showing sarcomatoid and/or rhabdoid dedifferentiation'\n                ];\n                break;\n            case 'lymphoid neoplasms':\n                codeList = [\n                    'low grade or indolent nhl',\n                    'high grade or aggressive nhl'\n                ];\n                break;\n            default:\n                codelist = [];\n        }\n\n        if (!codeList.includes($field.trim().toLowerCase()) && codeList.length){\n            const msg = `'${$field}' is not a permissible value. When 'tumour_grading_system' is set to '${$row.tumour_grading_system}', 'tumour_grade' must be one of the following: \\n${codeList.join(\"\\n\")}`;\n\n            result.valid = false;\n            result.message = msg;\n        }\n        return result;\n    })()"]}},"codeList":{"type":"created","data":["Low grade","High grade","GX","G1","G2","G3","G4","Low","High","I","II","III","IV","1","2","3","4","5"]}}}}],["specimen.percent_tumour_cells",{"left":{"name":"percent_tumour_cells","description":"Indicate a value, in decimals, that represents the percentage of infiltration by tumour cells in a specimen.","valueType":"number","meta":{"core":true},"restrictions":{"required":true}},"right":{"name":"percent_tumour_cells","description":"Indicate a value, in decimals, that represents the percentage of infiltration by tumour cells in a specimen.","valueType":"number","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","displayName":"Percent Tumour Cells"}},"diff":{"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Percent Tumour Cells"}},"restrictions":{"type":"deleted","data":{"required":true}}}}],["specimen.percent_proliferating_cells",{"left":{"name":"percent_proliferating_cells","description":"Indicate a value, in decimals, that represents the count of proliferating cells determined during pathologic review of the specimen.","valueType":"number","meta":{"core":true},"restrictions":{"required":true}},"right":{"name":"percent_proliferating_cells","description":"Indicate a value, in decimals, that represents the count of proliferating cells determined during pathologic review of the specimen.","valueType":"number","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","displayName":"Percent Proliferating Cells"}},"diff":{"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Percent Proliferating Cells"}},"restrictions":{"type":"deleted","data":{"required":true}}}}],["specimen.percent_inflammatory_tissue",{"left":{"name":"percent_inflammatory_tissue","description":"Indicate a value, in decimals, that represents local response to cellular injury, marked by capillary dilatation, edema and leukocyte infiltration; clinically, inflammation is manifest by redness, heat, pain, swelling and loss of function, with the need to heal damaged tissue.","valueType":"number","meta":{"core":true},"restrictions":{"required":true}},"right":{"name":"percent_inflammatory_tissue","description":"Indicate a value, in decimals, that represents local response to cellular injury, marked by capillary dilatation, edema and leukocyte infiltration; clinically, inflammation is manifest by redness, heat, pain, swelling and loss of function, with the need to heal damaged tissue.","valueType":"number","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","displayName":"Percent Inflammatory Tissue"}},"diff":{"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Percent Inflammatory Tissue"}},"restrictions":{"type":"deleted","data":{"required":true}}}}],["specimen.percent_stromal_cells",{"left":{"name":"percent_stromal_cells","description":"Indicate a value, in decimals, that represents the percentage of reactive cells that are present in a malignant tumour specimen but are not malignant such as fibroblasts, vascular structures, etc.","valueType":"number","meta":{"core":true},"restrictions":{"required":true}},"right":{"name":"percent_stromal_cells","description":"Indicate a value, in decimals, that represents the percentage of reactive cells that are present in a malignant tumour specimen but are not malignant such as fibroblasts, vascular structures, etc.","valueType":"number","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","displayName":"Percent Stromal Cells"}},"diff":{"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Percent Stromal Cells"}},"restrictions":{"type":"deleted","data":{"required":true}}}}],["specimen.percent_necrosis",{"left":{"name":"percent_necrosis","description":"Indicate a value, in decimals, that represents the percentage of cell death in a malignant tumour specimen.","valueType":"number","meta":{"core":true},"restrictions":{"required":true}},"right":{"name":"percent_necrosis","description":"Indicate a value, in decimals, that represents the percentage of cell death in a malignant tumour specimen.","valueType":"number","meta":{"core":true,"dependsOn":"sample_registration.tumour_normal_designation","notes":"This field is only required if the specimen is a tumour.","displayName":"Percent Necrosis"}},"diff":{"meta":{"dependsOn":{"type":"created","data":"sample_registration.tumour_normal_designation"},"notes":{"type":"created","data":"This field is only required if the specimen is a tumour."},"displayName":{"type":"created","data":"Percent Necrosis"}},"restrictions":{"type":"deleted","data":{"required":true}}}}],["primary_diagnosis.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"displayName":{"type":"created","data":"Program ID"}}}}],["primary_diagnosis.submitter_donor_id",{"left":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["primary_diagnosis.age_at_diagnosis",{"left":{"name":"age_at_diagnosis","valueType":"integer","description":"Age that the donor was first diagnosed with cancer, in years.","restrictions":{"required":true},"meta":{"units":"years","core":true}},"right":{"name":"age_at_diagnosis","valueType":"integer","description":"Age that the donor was first diagnosed with cancer, in years.","restrictions":{"required":true},"meta":{"units":"years","core":true,"displayName":"Age at Diagnosis"}},"diff":{"meta":{"displayName":{"type":"created","data":"Age at Diagnosis"}}}}],["primary_diagnosis.cancer_type_code",{"left":{"name":"cancer_type_code","valueType":"string","description":"The code to represent the cancer type using the WHO ICD-10 code (https://icd.who.int/browse10/2016/en#/) classification.","restrictions":{"required":true,"regex":"[A-Z]{1}[0-9]{2}.[0-9]{0,3}[A-Z]{0,1}$"},"meta":{"core":true}},"right":{"name":"cancer_type_code","valueType":"string","description":"The code to represent the cancer type using the WHO ICD-10 code (https://icd.who.int/browse10/2019/en) classification.","restrictions":{"required":true,"regex":"^[C|D][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$"},"meta":{"core":true,"examples":"C41.1,C16.9,C00.5,D46.9","displayName":"Cancer Type Code"}},"diff":{"description":{"type":"updated","data":"The code to represent the cancer type using the WHO ICD-10 code (https://icd.who.int/browse10/2019/en) classification."},"restrictions":{"regex":{"type":"updated","data":"^[C|D][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$"}},"meta":{"examples":{"type":"created","data":"C41.1,C16.9,C00.5,D46.9"},"displayName":{"type":"created","data":"Cancer Type Code"}}}}],["primary_diagnosis.number_lymph_nodes_positive",{"left":{"name":"number_lymph_nodes_positive","description":"The number of regional lymph nodes reported as being positive for tumour metastases.","valueType":"integer","restrictions":{"required":true},"meta":{"core":true}},"right":{"name":"number_lymph_nodes_positive","description":"The number of regional lymph nodes reported as being positive for tumour metastases. (Reference: NCI CDE ID: 6113694)","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"displayName":"Number Of Lymph Nodes Positive"}},"diff":{"description":{"type":"updated","data":"The number of regional lymph nodes reported as being positive for tumour metastases. (Reference: NCI CDE ID: 6113694)"},"meta":{"displayName":{"type":"created","data":"Number Of Lymph Nodes Positive"}}}}],["primary_diagnosis.number_lymph_nodes_examined",{"left":{"name":"number_lymph_nodes_examined","description":"The total number of lymph nodes tested for the presence of cancer.","valueType":"integer"},"right":{"name":"number_lymph_nodes_examined","description":"The total number of lymph nodes tested for the presence of cancer. (Reference: NCI CDE ID: 3)","valueType":"integer","meta":{"displayName":"Number Of Lymph Nodes Examined"}},"diff":{"description":{"type":"updated","data":"The total number of lymph nodes tested for the presence of cancer. (Reference: NCI CDE ID: 3)"},"meta":{"type":"created","data":{"displayName":"Number Of Lymph Nodes Examined"}}}}],["primary_diagnosis.clinical_tumour_staging_system",{"left":{"name":"clinical_tumour_staging_system","valueType":"string","description":"Indicate the tumour staging system used to stage the cancer at the time of primary diagnosis (prior to treatment).","restrictions":{"script":["(function validate() {\n\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* This is not a required field, so first ensure that it exists */\n        if ($field){\n            /* Contingent on the naming system for tumour staging systems to remain consistent */\n            const stagingName = $name.trim().toLowerCase().split('_tumour_staging_system')[0];\n            /* Perform validation only if an AJCC value was selected */\n            if (/^(AJCC)\\b/i.test($field)){\n                const requiredFields = [\n                    `${stagingName}_m_category`,\n                    `${stagingName}_n_category`,\n                    `${stagingName}_t_category`\n                ];\n                const convertedRow = Object.fromEntries(Object.entries($row).map(([fieldName,fieldVal]) => [fieldName.toLowerCase(), fieldVal]));\n                /* Check for contigous spaces wrapped with quotes (empty strings) */\n                const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n                /* search for fields with falsy values, given the field exists */\n                const emptyFields = requiredFields.filter(field => Object.keys(convertedRow).includes(field) && (!convertedRow[field] || checkforEmpty(convertedRow[field])))\n                if (emptyFields.length){\n                    result = {valid: false, \"message\": `The following fields are required when ${$name} is set to an AJCC option: ${emptyFields}`};\n                }\n            }\n        }\n        return result;\n    })()"],"required":true,"codeList":["Binet","Rai","FIGO","Ann Arbor","Murphy","Lugano","AJCC 8th Edition","AJCC 7th Edition","AJCC 6th Edition","AJCC 5th Edition","AJCC 4th Edition","AJCC 3rd Edition","AJCC 2nd Edition","AJCC 1st Edition"]},"meta":{"core":true}},"right":{"name":"clinical_tumour_staging_system","valueType":"string","description":"Indicate the tumour staging system used to stage the cancer at the time of primary diagnosis (prior to treatment).","restrictions":{"script":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"],"required":true,"codeList":["Binet","Rai","FIGO","Ann Arbor","Murphy","Lugano","AJCC 8th Edition","AJCC 7th Edition","AJCC 6th Edition","AJCC 5th Edition","AJCC 4th Edition","AJCC 3rd Edition","AJCC 2nd Edition","AJCC 1st Edition"]},"meta":{"core":true,"displayName":"Clinical Tumour Staging System"}},"diff":{"restrictions":{"script":{"type":"updated","data":{"added":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"],"deleted":["(function validate() {\n\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* This is not a required field, so first ensure that it exists */\n        if ($field){\n            /* Contingent on the naming system for tumour staging systems to remain consistent */\n            const stagingName = $name.trim().toLowerCase().split('_tumour_staging_system')[0];\n            /* Perform validation only if an AJCC value was selected */\n            if (/^(AJCC)\\b/i.test($field)){\n                const requiredFields = [\n                    `${stagingName}_m_category`,\n                    `${stagingName}_n_category`,\n                    `${stagingName}_t_category`\n                ];\n                const convertedRow = Object.fromEntries(Object.entries($row).map(([fieldName,fieldVal]) => [fieldName.toLowerCase(), fieldVal]));\n                /* Check for contigous spaces wrapped with quotes (empty strings) */\n                const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n                /* search for fields with falsy values, given the field exists */\n                const emptyFields = requiredFields.filter(field => Object.keys(convertedRow).includes(field) && (!convertedRow[field] || checkforEmpty(convertedRow[field])))\n                if (emptyFields.length){\n                    result = {valid: false, \"message\": `The following fields are required when ${$name} is set to an AJCC option: ${emptyFields}`};\n                }\n            }\n        }\n        return result;\n    })()"]}}},"meta":{"displayName":{"type":"created","data":"Clinical Tumour Staging System"}}}}],["primary_diagnosis.clinical_stage_group",{"left":{"name":"clinical_stage_group","description":"Stage group of the tumour, as assigned by the reporting tumour_staging_system, that indicates the overall prognostic tumour stage (ie. Stage I, Stage II, Stage III etc.).","valueType":"string","restrictions":{"required":true},"meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system"}},"right":{"name":"clinical_stage_group","description":"Stage group of the tumour, as assigned by the reporting tumour_staging_system, that indicates the overall prognostic tumour stage (ie. Stage I, Stage II, Stage III etc.).","valueType":"string","restrictions":{"required":true},"meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system","displayName":"Clinical Stage Group"}},"diff":{"meta":{"displayName":{"type":"created","data":"Clinical Stage Group"}}}}],["primary_diagnosis.stage_suffix",{"left":{"name":"stage_suffix","description":"If necessary, use this field to add any applicable stage suffixes. Stage suffixes may apply to certain staging systems such as Ann Arbour staging system where the four stages are divided into 4 categories (A, B, X and E).","valueType":"string","meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system"}},"right":{"name":"stage_suffix","description":"If necessary, use this field to add any applicable stage suffixes. Stage suffixes may apply to certain staging systems such as Ann Arbour staging system where the four stages are divided into 4 categories (A, B, X and E).","valueType":"string","meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system","displayName":"Stage Suffix"}},"diff":{"meta":{"displayName":{"type":"created","data":"Stage Suffix"}}}}],["primary_diagnosis.clinical_t_category",{"left":{"name":"clinical_t_category","description":"The code to represent the extent of the primary tumour (T) based on evidence obtained from clinical assessment parameters determined at time of primary diagnosis and prior to treatment, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system","notes":"This field is required only if the selected clinical_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"clinical_t_category","description":"The code to represent the extent of the primary tumour (T) based on evidence obtained from clinical assessment parameters determined at time of primary diagnosis and prior to treatment, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system","notes":"This field is required only if the selected clinical_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Clinical T Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Clinical T Category"}}}}],["primary_diagnosis.clinical_n_category",{"left":{"name":"clinical_n_category","description":"The code to represent the stage of cancer defined by which is the extent of the regional lymph node (N) involvement for the cancer based on evidence obtained from clinical assessment parameters determined at time of primary diagnosis and prior to treatment, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system","notes":"This field is required only if the selected clinical_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"clinical_n_category","description":"The code to represent the stage of cancer defined by which is the extent of the regional lymph node (N) involvement for the cancer based on evidence obtained from clinical assessment parameters determined at time of primary diagnosis and prior to treatment, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system","notes":"This field is required only if the selected clinical_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Clinical N Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Clinical N Category"}}}}],["primary_diagnosis.clinical_m_category",{"left":{"name":"clinical_m_category","description":"The code to represent the stage of cancer defined bythe extent of the distant metastasis (M) for the cancer based on evidence obtained from clinical assessment parameters determined at time of primary diagnosis and prior to treatment, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual. MX is NOT a valid category and cannot be assigned.","valueType":"string","meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system","notes":"This field is required only if the selected clinical_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"clinical_m_category","description":"The code to represent the stage of cancer defined bythe extent of the distant metastasis (M) for the cancer based on evidence obtained from clinical assessment parameters determined at time of primary diagnosis and prior to treatment, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual. MX is NOT a valid category and cannot be assigned.","valueType":"string","meta":{"core":true,"dependsOn":"primary_diagnosis.clinical_tumour_staging_system","notes":"This field is required only if the selected clinical_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Clinical M Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Clinical M Category"}}}}],["primary_diagnosis.presenting_symptoms",{"left":{"name":"presenting_symptoms","description":"Indicate presenting symptoms at time of primary diagnosis.","valueType":"string","restrictions":{"codeList":["Abdominal Pain","Anemia","Back Pain","Bloating","Cholangitis","Constipation","Dark Urine","Decreased Appetite","Diabetes","Diarrhea","Fatigue","Fever","Hypoglycemia","Jaundice","Nausea","None","Pale Stools","Pancreatitis","Pruritus/Itchiness","Steatorrhea","Unknown","Vomiting","Weight Loss"]}},"right":{"name":"presenting_symptoms","description":"Indicate presenting symptoms at time of primary diagnosis.","valueType":"string","isArray":true,"restrictions":{"codeList":["Abdominal Pain","Anemia","Back Pain","Bloating","Cholangitis","Constipation","Dark Urine","Decreased Appetite","Diabetes","Diarrhea","Fatigue","Fever","Hypoglycemia","Jaundice","Nausea","None","Pale Stools","Pancreatitis","Pruritus/Itchiness","Steatorrhea","Unknown","Vomiting","Weight Loss"]},"meta":{"displayName":"Presenting Symptoms","notes":"To include multiple values, separate values with a comma ',' within your file.","examples":"Anemia,Bloating,Diabetes"}},"diff":{"isArray":{"type":"created","data":true},"meta":{"type":"created","data":{"displayName":"Presenting Symptoms","notes":"To include multiple values, separate values with a comma ',' within your file.","examples":"Anemia,Bloating,Diabetes"}}}}],["primary_diagnosis.performance_status",{"left":{"name":"performance_status","description":"Indicate the donor's performance status grade at the time of primary diagnosis (ECOG performance score grades: https://ecog-acrin.org/resources/ecog-performance-status).","valueType":"string","restrictions":{"codeList":["Grade 0","Grade 1","Grade 2","Grade 3","Grade 4"]},"meta":{"notes":"Grade 0: Fully active, able to carry on all pre-disease performance without restriction \n Grade 1: Restricted in physically strenuous activity but ambulatory and able to carry out work of a light or sedentary nature (ie. Light house work, office work) \n Grade 2: Ambulatory and capable of all selfcare but unable to carry out any work activities; up and about more than 50% of waking hours \n Grade 3: Capable of only limited selfcare; confined to bed or chair more than 50% of waking hours \n Grade 4: Completely disabled; cannot carry on any selfcare; totally confined to bed or chair"}},"right":{"name":"performance_status","description":"Indicate the donor's performance status grade at the time of primary diagnosis. (Reference source: ECOG performance score grades from https://ecog-acrin.org/resources/ecog-performance-status).","valueType":"string","restrictions":{"codeList":["Grade 0","Grade 1","Grade 2","Grade 3","Grade 4"]},"meta":{"notes":"Grade 0: Fully active, able to carry on all pre-disease performance without restriction \n Grade 1: Restricted in physically strenuous activity but ambulatory and able to carry out work of a light or sedentary nature (ie. Light house work, office work) \n Grade 2: Ambulatory and capable of all selfcare but unable to carry out any work activities; up and about more than 50% of waking hours \n Grade 3: Capable of only limited selfcare; confined to bed or chair more than 50% of waking hours \n Grade 4: Completely disabled; cannot carry on any selfcare; totally confined to bed or chair","displayName":"Performance Status"}},"diff":{"description":{"type":"updated","data":"Indicate the donor's performance status grade at the time of primary diagnosis. (Reference source: ECOG performance score grades from https://ecog-acrin.org/resources/ecog-performance-status)."},"meta":{"displayName":{"type":"created","data":"Performance Status"}}}}],["treatment.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"displayName":{"type":"created","data":"Program ID"}}}}],["treatment.submitter_donor_id",{"left":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_donor_id","description":"Unique identifier of the donor, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["treatment.submitter_treatment_id",{"left":{"name":"submitter_treatment_id","description":"Unique identifier of the treatment, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_treatment_id","description":"Unique identifier of the treatment, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Treatment ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Treatment ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["treatment.treatment_type",{"left":{"name":"treatment_type","description":"Indicate the type of treatment regimen that the donor completed.","valueType":"string","restrictions":{"required":true,"codeList":["Chemotherapy","Ablation","Bone marrow transplant","Combined chemo+immunotherapy","Combined chemo+radiation therapy","Combined chemo-radiotherapy and surgery","Endoscopic therapy","Hormonal therapy","Immunotherapy","Monoclonal antibodies (for liquid tumours)","No treatment","Other targeting molecular therapy","Photodynamic therapy","Radiation therapy","Stem cell transplant","Surgical resection"]},"meta":{"validationDependency":true,"core":true,"notes":"Depending on the treatment_type selected, additional treament details may be required to be submitted."}},"right":{"name":"treatment_type","description":"Indicate the type of treatment regimen that the donor completed.","valueType":"string","restrictions":{"required":true,"codeList":["Chemotherapy","Ablation","Bone marrow transplant","Combined chemo+immunotherapy","Combined chemo+radiation therapy","Combined chemo-radiotherapy and surgery","Endoscopic therapy","Hormonal therapy","Immunotherapy","Monoclonal antibodies (for liquid tumours)","No treatment","Other targeting molecular therapy","Photodynamic therapy","Radiation therapy","Stem cell transplant","Surgical resection"]},"meta":{"validationDependency":true,"core":true,"notes":"Depending on the treatment_type selected, additional treament details may be required to be submitted.  Depending on the treatment_type selected, additional treatment details may be required to be submitted. For example, if treatment_type includes 'Chemotherapy', the supplemental Chemotherapy treatment type file is required.","displayName":"Treatment Type"}},"diff":{"meta":{"notes":{"type":"updated","data":"Depending on the treatment_type selected, additional treament details may be required to be submitted.  Depending on the treatment_type selected, additional treatment details may be required to be submitted. For example, if treatment_type includes 'Chemotherapy', the supplemental Chemotherapy treatment type file is required."},"displayName":{"type":"created","data":"Treatment Type"}}}}],["treatment.age_at_consent_for_treatment",{"left":{"name":"age_at_consent_for_treatment","description":"Indicate the age of donor when consent was given for treatment.","valueType":"integer"},"right":{"name":"age_at_consent_for_treatment","description":"Indicate the age of donor when consent was given for treatment.","valueType":"integer","meta":{"displayName":"Age At Consent For Treatment"}},"diff":{"meta":{"type":"created","data":{"displayName":"Age At Consent For Treatment"}}}}],["treatment.is_primary_treatment",{"left":{"name":"is_primary_treatment","description":"Indicate if the treamtment was the primary treatment following the initial diagnosis.","valueType":"string","restrictions":{"required":true,"codeList":["Yes","No","Unknown"]},"meta":{"core":true}},"right":{"name":"is_primary_treatment","description":"Indicate if the treamtment was the primary treatment following the initial diagnosis.","valueType":"string","restrictions":{"required":true,"codeList":["Yes","No","Unknown"]},"meta":{"core":true,"displayName":"Is Primary Treatment"}},"diff":{"meta":{"displayName":{"type":"created","data":"Is Primary Treatment"}}}}],["treatment.treatment_start_interval",{"left":{"name":"treatment_start_interval","description":"The interval between primary diagnosis and initiation of treatment, in days.","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"units":"days"}},"right":{"name":"treatment_start_interval","description":"The interval between primary diagnosis and initiation of treatment, in days.","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"units":"days","notes":"The associated Primary Diagnosis is used as the reference point for this interval. To calculate this, find the number of days since the date of primary diagnosis.","displayName":"Treatment Start Interval"}},"diff":{"meta":{"notes":{"type":"created","data":"The associated Primary Diagnosis is used as the reference point for this interval. To calculate this, find the number of days since the date of primary diagnosis."},"displayName":{"type":"created","data":"Treatment Start Interval"}}}}],["treatment.treatment_duration",{"left":{"name":"treatment_duration","description":"The duration of treatment regimen, in days","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"units":"days"}},"right":{"name":"treatment_duration","description":"The duration of treatment regimen, in days.","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"units":"days","displayName":"Treatment Duration"}},"diff":{"description":{"type":"updated","data":"The duration of treatment regimen, in days."},"meta":{"displayName":{"type":"created","data":"Treatment Duration"}}}}],["treatment.therapeutic_intent",{"left":{"name":"therapeutic_intent","description":"The therapeutic intent, the reason behind the choice of a therapy, of the treatment.","valueType":"string","restrictions":{"required":true,"codeList":["Adjuvant","Concurrent","Curative","Neoadjuvant","Not applicable","Palliative","Unknown"]},"meta":{"core":true}},"right":{"name":"therapeutic_intent","description":"The therapeutic intent, the reason behind the choice of a therapy, of the treatment.","valueType":"string","restrictions":{"required":true,"codeList":["Adjuvant","Concurrent","Curative","Neoadjuvant","Not applicable","Palliative","Unknown"]},"meta":{"core":true,"displayName":"Therapeutic Intent"}},"diff":{"meta":{"displayName":{"type":"created","data":"Therapeutic Intent"}}}}],["treatment.response_to_therapy",{"left":{"name":"response_to_therapy","description":"The donors's response to the applied treatment regimen.","valueType":"string","restrictions":{"required":true,"codeList":["Complete response","Disease progression","NED","Partial response","Stable disease"]},"meta":{"core":true}},"right":{"name":"response_to_therapy","description":"The donors's response to the applied treatment regimen. (Source: RECIST)","valueType":"string","restrictions":{"required":true,"codeList":["Complete response","Disease progression","NED","Partial response","Stable disease"]},"meta":{"core":true,"displayName":"Response to Therapy"}},"diff":{"description":{"type":"updated","data":"The donors's response to the applied treatment regimen. (Source: RECIST)"},"meta":{"displayName":{"type":"created","data":"Response to Therapy"}}}}],["chemotherapy.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"displayName":{"type":"created","data":"Program ID"}}}}],["chemotherapy.submitter_donor_id",{"left":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["chemotherapy.submitter_treatment_id",{"left":{"name":"submitter_treatment_id","valueType":"string","description":"Unique identifier of the treatment, as assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"treatment.submitter_treatment_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_treatment_id","valueType":"string","description":"Unique identifier of the treatment, as assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"treatment.submitter_treatment_id","displayName":"Submitter Treatment ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Treatment ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["chemotherapy.chemotherapy_drug_name",{"left":{"name":"chemotherapy_drug_name","description":"Name of agent or drug administered to patient as part of the chemotherapy treatment regimen.","valueType":"string","restrictions":{"required":true,"codeList":["Placeholder list 1","Need list","Still need it"]},"meta":{"validationDependency":true,"core":true,"notes":"This field uses a controlled vocabulary gathered from the DrugBank database of drug names.","examples":"Allopurinol, Dronabinol, Sucralfate, Lapatinib"}},"diff":{"type":"deleted","data":{"name":"chemotherapy_drug_name","description":"Name of agent or drug administered to patient as part of the chemotherapy treatment regimen.","valueType":"string","restrictions":{"required":true,"codeList":["Placeholder list 1","Need list","Still need it"]},"meta":{"validationDependency":true,"core":true,"notes":"This field uses a controlled vocabulary gathered from the DrugBank database of drug names.","examples":"Allopurinol, Dronabinol, Sucralfate, Lapatinib"}}}}],["chemotherapy.chemotherapy_dosage_units",{"left":{"name":"chemotherapy_dosage_units","description":"Indicate units used to record chemotherapy drug dosage.","valueType":"string","restrictions":{"required":true,"codeList":["mg/m²","IU/m²","µg/m²","g/m²","kg"]},"meta":{"core":true}},"right":{"name":"chemotherapy_dosage_units","description":"Indicate units used to record chemotherapy drug dosage.","valueType":"string","restrictions":{"required":true,"codeList":["mg/m2","IU/m2","ug/m2","g/m2","mg/kg"]},"meta":{"core":true,"displayName":"Chemotherapy Dosage Units"}},"diff":{"restrictions":{"codeList":{"type":"updated","data":{"added":["mg/m2","IU/m2","ug/m2","g/m2","mg/kg"],"deleted":["mg/m²","IU/m²","µg/m²","g/m²","kg"]}}},"meta":{"displayName":{"type":"created","data":"Chemotherapy Dosage Units"}}}}],["chemotherapy.cumulative_drug_dosage",{"left":{"name":"cumulative_drug_dosage","description":"Indicate the total drug dose in the same units specified in chemotherapy_dosage_units.","valueType":"integer","restrictions":{"required":true},"meta":{"core":true}},"right":{"name":"cumulative_drug_dosage","description":"Indicate the total drug dose in the same units specified in chemotherapy_dosage_units.","valueType":"number","restrictions":{"required":true},"meta":{"core":true,"displayName":"Cumulative Drug Dosage"}},"diff":{"valueType":{"type":"updated","data":"number"},"meta":{"displayName":{"type":"created","data":"Cumulative Drug Dosage"}}}}],["hormone_therapy.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"displayName":{"type":"created","data":"Program ID"}}}}],["hormone_therapy.submitter_donor_id",{"left":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["hormone_therapy.submitter_treatment_id",{"left":{"name":"submitter_treatment_id","valueType":"string","description":"Unique identifier of the treatment, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"treatment.submitter_treatment_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_treatment_id","valueType":"string","description":"Unique identifier of the treatment, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"treatment.submitter_treatment_id","displayName":"Submitter Treatment ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Treatment ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["hormone_therapy.hormone_therapy_drug_name",{"left":{"name":"hormone_therapy_drug_name","description":"Name of agent or drug administered to patient as part of the hormone therapy treatment regimen.","valueType":"string","restrictions":{"required":true,"codeList":["Placeholder list 1","Need list","Still need it"]},"meta":{"validationDependency":true,"core":true,"notes":"This field uses a controlled vocabulary gathered from the DrugBank database of drug names."}},"diff":{"type":"deleted","data":{"name":"hormone_therapy_drug_name","description":"Name of agent or drug administered to patient as part of the hormone therapy treatment regimen.","valueType":"string","restrictions":{"required":true,"codeList":["Placeholder list 1","Need list","Still need it"]},"meta":{"validationDependency":true,"core":true,"notes":"This field uses a controlled vocabulary gathered from the DrugBank database of drug names."}}}}],["hormone_therapy.hormone_drug_dosage_units",{"left":{"name":"hormone_drug_dosage_units","description":"Indicate the units used to record hormone drug dosage.","valueType":"string","restrictions":{"required":true,"codeList":["mg/m²","IU/m²","µg/m²","g/m²","kg "]},"meta":{"core":true}},"right":{"name":"hormone_drug_dosage_units","description":"Indicate the units used to record hormone drug dosage.","valueType":"string","restrictions":{"required":true,"codeList":["mg/m2","IU/m2","ug/m2","g/m2","mg/kg"]},"meta":{"core":true,"displayName":"Hormone Therapy Dosage Units"}},"diff":{"restrictions":{"codeList":{"type":"updated","data":{"added":["mg/m2","IU/m2","ug/m2","g/m2","mg/kg"],"deleted":["mg/m²","IU/m²","µg/m²","g/m²","kg "]}}},"meta":{"displayName":{"type":"created","data":"Hormone Therapy Dosage Units"}}}}],["hormone_therapy.cumulative_drug_dosage",{"left":{"name":"cumulative_drug_dosage","description":"Indicate total drug dose in units specified in hormone_drug_dosage_units.","valueType":"integer","restrictions":{"required":true},"meta":{"core":true}},"right":{"name":"cumulative_drug_dosage","description":"Indicate total drug dose in units specified in hormone_drug_dosage_units.","valueType":"number","restrictions":{"required":true},"meta":{"core":true,"displayName":"Cumulative Drug Dosage"}},"diff":{"valueType":{"type":"updated","data":"number"},"meta":{"displayName":{"type":"created","data":"Cumulative Drug Dosage"}}}}],["radiation.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"displayName":{"type":"created","data":"Program ID"}}}}],["radiation.submitter_donor_id",{"left":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_donor_id","valueType":"string","description":"Unique identifier of the donor, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["radiation.submitter_treatment_id",{"left":{"name":"submitter_treatment_id","valueType":"string","description":"Unique identifier of the treatment, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"treatment.submitter_treatment_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"name":"submitter_treatment_id","valueType":"string","description":"Unique identifier of the treatment, assigned by the data provider.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"treatment.submitter_treatment_id","displayName":"Submitter Treatment ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Treatment ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["radiation.radiation_therapy_modality",{"left":{"name":"radiation_therapy_modality","description":"Indicate the method of radiation treatment or modality.","valueType":"string","restrictions":{"required":true,"codeList":["Electron","Heavy Ions","Photon","Proton"]},"meta":{"validationDependency":true,"core":true}},"right":{"name":"radiation_therapy_modality","description":"Indicate the method of radiation treatment or modality.","valueType":"string","restrictions":{"required":true,"codeList":["Electron","Heavy Ions","Photon","Proton"]},"meta":{"validationDependency":true,"core":true,"displayName":"Radiation Therapy Modality"}},"diff":{"meta":{"displayName":{"type":"created","data":"Radiation Therapy Modality"}}}}],["radiation.application_form",{"left":{"name":"application_form","description":"Indicate type of radiation therapy administered.","valueType":"string","restrictions":{"required":true,"codeList":["External","Internal (including Brachytherapy)"]},"meta":{"core":true}},"right":{"name":"application_form","description":"Indicate type of radiation therapy administered.","valueType":"string","restrictions":{"required":true,"codeList":["External","Internal"]},"meta":{"core":true,"displayName":"Application Form","notes":"Internal application includes Brachytherapy."}},"diff":{"restrictions":{"codeList":{"type":"updated","data":{"added":["Internal"],"deleted":["Internal (including Brachytherapy)"]}}},"meta":{"displayName":{"type":"created","data":"Application Form"},"notes":{"type":"created","data":"Internal application includes Brachytherapy."}}}}],["radiation.radiation_therapy_fractions",{"left":{"name":"radiation_therapy_fractions","description":"Indicate the number of total fractions delivered as part of treatment.","valueType":"integer","restrictions":{"required":true},"meta":{"core":true}},"right":{"name":"radiation_therapy_fractions","description":"Indicate the number of total fractions delivered as part of treatment.","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"displayName":"Radiation Therapy Fractions"}},"diff":{"meta":{"displayName":{"type":"created","data":"Radiation Therapy Fractions"}}}}],["radiation.radiation_therapy_dosage",{"left":{"name":"radiation_therapy_dosage","description":"Indicate the total dose given in units of Gray (Gy).","valueType":"integer","restrictions":{"required":true},"meta":{"core":true}},"right":{"name":"radiation_therapy_dosage","description":"Indicate the total dose given in units of Gray (Gy).","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"displayName":"Radiation Therapy Dosage"}},"diff":{"meta":{"displayName":{"type":"created","data":"Radiation Therapy Dosage"}}}}],["radiation.anatomical_site_irradiated",{"left":{"name":"anatomical_site_irradiated","description":"Indicate localization site where radiation therapy was administered.","valueType":"string","restrictions":{"required":true,"codeList":["Abdomen","Bone","Brain","Extremities","Head","Head-Neck","Liver","Lung","Pelvis","Peritoneum","Spine","Thorax"]},"meta":{"core":true}},"right":{"name":"anatomical_site_irradiated","description":"Indicate localization site where radiation therapy was administered.","valueType":"string","restrictions":{"required":true,"codeList":["Abdomen","Bone","Brain","Extremities","Head","Head-Neck","Liver","Lung","Pelvis","Peritoneum","Spine","Thorax"]},"meta":{"core":true,"displayName":"Anatomical Site Irradiated"}},"diff":{"meta":{"displayName":{"type":"created","data":"Anatomical Site Irradiated"}}}}],["follow_up.program_id",{"left":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id"},"restrictions":{"required":true}},"right":{"name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"diff":{"meta":{"displayName":{"type":"created","data":"Program ID"}}}}],["follow_up.submitter_donor_id",{"left":{"description":"Unique identifier of the donor, assigned by the data provider.","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"description":"Unique identifier of the donor, assigned by the data provider.","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Donor ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["follow_up.submitter_follow_up_id",{"left":{"description":"Unique identifier for a follow-up event in a donors clincal record, assigned by the data provider.","name":"submitter_follow_up_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}$"}},"right":{"description":"Unique identifier for a follow-up event in a donors clincal record, assigned by the data provider.","name":"submitter_follow_up_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Follow-Up ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"meta":{"displayName":{"type":"created","data":"Submitter Follow-Up ID"}},"restrictions":{"regex":{"type":"updated","data":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["follow_up.interval_of_followup",{"left":{"description":"Interval from the primary diagnosis date to the follow up date, in days.","name":"interval_of_followup","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"units":"days"}},"right":{"description":"Interval from the primary diagnosis date to the follow-up date, in days.","name":"interval_of_followup","valueType":"integer","restrictions":{"required":true},"meta":{"core":true,"units":"days","displayName":"Interval Of Follow-Up","notes":"The associated Primary Diagnosis is used as the reference point for this interval. To calculate this, find the number of days since the date of primary diagnosis."}},"diff":{"description":{"type":"updated","data":"Interval from the primary diagnosis date to the follow-up date, in days."},"meta":{"displayName":{"type":"created","data":"Interval Of Follow-Up"},"notes":{"type":"created","data":"The associated Primary Diagnosis is used as the reference point for this interval. To calculate this, find the number of days since the date of primary diagnosis."}}}}],["follow_up.disease_status_at_followup",{"left":{"description":"Indicate the donor's disease status at time of follow-up.","name":"disease_status_at_followup","valueType":"string","restrictions":{"required":true,"codeList":["Complete remission","Distant progression","Loco-regional progression","No evidence of disease","Partial remission","Relapse","Stable"]},"meta":{"core":true}},"right":{"description":"Indicate the donor's disease status at time of follow-up.","name":"disease_status_at_followup","valueType":"string","restrictions":{"required":true,"codeList":["Complete remission","Distant progression","Loco-regional progression","No evidence of disease","Partial remission","Relapse","Stable"]},"meta":{"core":true,"displayName":"Disease Status at Follow-Up"}},"diff":{"meta":{"displayName":{"type":"created","data":"Disease Status at Follow-Up"}}}}],["follow_up.relapse_type",{"left":{"description":"Indicate the donor's relapse type.","name":"relapse_type","valueType":"string","restrictions":{"codeList":["Distant recurrence/metastasis","Local recurrence","Local recurrence and distant metastasis","Progression (liquid tumours)"]},"meta":{"core":true,"dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse."}},"right":{"description":"Indicate the donor's relapse type.","name":"relapse_type","valueType":"string","restrictions":{"codeList":["Distant recurrence/metastasis","Local recurrence","Local recurrence and distant metastasis","Progression (liquid tumours)"]},"meta":{"core":true,"dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse.","displayName":"Relapse Type"}},"diff":{"meta":{"displayName":{"type":"created","data":"Relapse Type"}}}}],["follow_up.relapse_interval",{"left":{"description":"If the donor was clinically disease free following primary treatment and then relapse or progression (for liquid tumours) occurred afterwards, then this field will indicate the length of disease free interval, in days.","name":"relapse_interval","valueType":"integer","restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"]},"meta":{"core":true,"units":"days","dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse."}},"right":{"description":"If the donor was clinically disease free following primary treatment and then relapse or progression (for liquid tumours) occurred afterwards, then this field will indicate the length of disease free interval, in days.","name":"relapse_interval","valueType":"integer","restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"]},"meta":{"core":true,"units":"days","dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates a progression or relapse value.","displayName":"Relapse Interval"}},"diff":{"meta":{"notes":{"type":"updated","data":"This field is required to be submitted if disease_status_at_followup indicates a progression or relapse value."},"displayName":{"type":"created","data":"Relapse Interval"}}}}],["follow_up.method_of_progression_status",{"left":{"description":"Indicate the method(s) used to confirm the donor's progression disease status.","name":"method_of_progression_status","valueType":"string","restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus.match(/(progression)$/);\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\n        }\n\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"],"codeList":["Autopsy","Biomarker in liquid biopsy (e.g. tumor marker in blood or urine)","Biopsy","Blood draw","Bone marrow aspirate","Core biopsy","Cystoscopy","Cytology","Debulking","Diagnostic imaging","Dilation and curettage procedure","Enucleation","Excisional biopsy","Fine needle aspiration","Imaging","Incisional biopsy","Laparoscopy","Laparotomy","Other","Pap Smear","Pathologic review","Physical exam","Surgical resection","Thoracentesis","Ultrasound guided biopsy"]},"meta":{"core":true,"dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse."}},"right":{"description":"Indicate the method(s) used to confirm the donor's progression disease status. (Codelist reference: NCI CDE ID: 6161031)","name":"method_of_progression_status","valueType":"string","restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus.match(/(progression)$/);\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\n        }\n\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"],"codeList":["Biomarker in liquid biopsy (e.g. tumour marker in blood or urine)","Biopsy","Blood draw","Bone marrow aspirate","Core biopsy","Cystoscopy","Cytology","Debulking","Diagnostic imaging","Dilation and curettage procedure","Enucleation","Excisional biopsy","Fine needle aspiration","Imaging","Incisional biopsy","Laparoscopy","Laparotomy","Other","Pap Smear","Pathologic review","Physical exam","Surgical resection","Thoracentesis","Ultrasound guided biopsy"]},"meta":{"core":true,"dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse","displayName":"Method Of Progression Status"}},"diff":{"description":{"type":"updated","data":"Indicate the method(s) used to confirm the donor's progression disease status. (Codelist reference: NCI CDE ID: 6161031)"},"restrictions":{"codeList":{"type":"updated","data":{"added":["Biomarker in liquid biopsy (e.g. tumour marker in blood or urine)"],"deleted":["Autopsy","Biomarker in liquid biopsy (e.g. tumor marker in blood or urine)"]}}},"meta":{"notes":{"type":"updated","data":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse"},"displayName":{"type":"created","data":"Method Of Progression Status"}}}}],["follow_up.anatomic_site_progression_or_recurrences",{"left":{"description":"Indicate the anatomic site where disease progression or recurrence occurred.","name":"anatomic_site_progression_or_recurrences","valueType":"string","restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus.match(/(progression)$/);\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\n        }\n\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"],"codeList":["Abdomen","Abdominal wall","Acetabulum","Adenoid","Adipose","Adrenal","Adrenal gland","Alveolar ridge","Amniotic fluid","Ampulla of Vater","Anal sphincter","Ankle","Anorectum","Antecubital fossa","Antrum","Anus","Aorta","Aortic body","Appendix","Aqueous fluid","Arm","Artery","Ascending colon","Ascending colon hepatic flexure","Ascites","Auditory canal","Autonomic nervous system","Axilla","Back","Bile duct","Bladder","Blood","Blood vessel","Bone","Bone marrow","Bowel","Brain","Brain stem","Breast","Broad ligament","Bronchiole","Bronchus","Brow","Buccal cavity","Buccal mucosa","Buttock","Calf","Capillary","Cardia","Carina","Carotid artery","Carotid body","Cartilage","Cecum","Cell-line","Central nervous system","Cerebellum","Cerebral cortex","Cerebrospinal fluid","Cerebrum","Cervical spine","Cervix","Chest","Chest wall","Chin","Clavicle","Clitoris","CNS/spinal","Colon","Colon - mucosa only","Colorectal","Common duct","Conjunctiva","Connective tissue","Dermal","Descending colon","Diaphragm","Duodenum","Ear","Ear canal","Ear, pinna (external)","Effusion","Elbow","Endocrine gland","Epididymis","Epidural space","Esophageal; distal","Esophageal; mid","Esophageal; proximal","Esophagogastric junction","Esophagus","Esophagus - mucosa only","Eye","Fallopian tube","Femoral artery","Femoral vein","Femur","Fibroblasts","Fibula","Finger","Floor of mouth","Fluid","Foot","Forearm","Forehead","Foreskin","Frontal cortex","Frontal lobe","Fundus of stomach","Gallbladder","Ganglia","Gastroesophageal junction","Gastrointestinal tract","Groin","Gum","Hand","Hard palate","Head - face or neck, NOS","Head and neck","Heart","Hepatic","Hepatic duct","Hepatic flexure","Hepatic vein","Hip","Hippocampus","Humerus","Hypopharynx","Ileum","Ilium","Index finger","Ischium","Islet cells","Jaw","Jejunum","Joint","Kidney","Knee","Lacrimal gland","Large bowel","Laryngopharynx","Larynx","Leg","Leptomeninges","Ligament","Lip","Liver","Lumbar spine","Lung","Lymph node","Lymph node(s) axilla","Lymph node(s) cervical","Lymph node(s) distant","Lymph node(s) epitrochlear","Lymph node(s) femoral","Lymph node(s) hilar","Lymph node(s) iliac-common","Lymph node(s) iliac-external","Lymph node(s) inguinal","Lymph node(s) internal mammary","Lymph node(s) mammary","Lymph node(s) mesenteric","Lymph node(s) occipital","Lymph node(s) paraaortic","Lymph node(s) parotid","Lymph node(s) pelvic","Lymph node(s) popliteal","Lymph node(s) regional","Lymph node(s) retroperitoneal","Lymph node(s) scalene","Lymph node(s) splenic","Lymph node(s) subclavicular","Lymph node(s) submandibular","Lymph node(s) supraclavicular","Lymph nodes(s) mediastinal","Mandible","Maxilla","Mediastinal soft tissue","Mediastinum","Mesentery","Mesothelium","Middle finger","Mitochondria","Muscle","Nails","Nasal cavity","Nasal soft tissue","Nasopharynx","Neck","Nerve","Nerve(s) cranial","Occipital cortex","Ocular orbits","Omentum","Oral cavity","Oral cavity - mucosa only","Oropharynx","Other","Ovary","Palate","Pancreas","Paraspinal ganglion","Parathyroid","Parotid gland","Patella","Pelvis","Penis","Pericardium","Periorbital soft tissue","Peritoneal cavity","Peritoneum","Pharynx","Pineal","Pineal gland","Pituitary gland","Placenta","Pleura","Pleural effusion","Popliteal fossa","Prostate","Pylorus","Rectosigmoid junction","Rectum","Retina","Retro-orbital region","Retroperitoneum","Rib","Ring finger","Round ligament","Sacrum","Salivary gland","Scalp","Scapula","Sciatic nerve","Scrotum","Seminal vesicle","Shoulder","Sigmoid colon","Sinus","Sinus(es), maxillary","Skeletal muscle","Skin","Skull","Small bowel","Small bowel - mucosa only","Small finger","Soft tissue","Spinal column","Spinal cord","Spleen","Splenic flexure","Sternum","Stomach","Stomach - mucosa only","Subcutaneous tissue","Synovium","Temporal cortex","Tendon","Testis","Thigh","Thoracic spine","Thorax","Throat","Thumb","Thymus","Thyroid","Tibia","Tongue","Tonsil","Tonsil (pharyngeal)","Trachea / major bronchi","Transverse colon","Trunk","Umbilical cord","Ureter","Urethra","Urinary tract","Uterus","Uvula","Vagina","Vas deferens","Vein","Venous","Vertebra","Vulva","White blood cells","Wrist"]},"meta":{"core":true,"dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse."}},"right":{"description":"Indicate the anatomic site where disease progression or recurrence occurred. (Codelist reference: NCI CDE ID: 4742851)","name":"anatomic_site_progression_or_recurrences","valueType":"string","restrictions":{"script":["(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus.match(/(progression)$/);\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\n        }\n\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"],"codeList":["Abdomen","Abdominal wall","Acetabulum","Adenoid","Adipose","Adrenal","Adrenal gland","Alveolar ridge","Amniotic fluid","Ampulla of Vater","Anal sphincter","Ankle","Anorectum","Antecubital fossa","Antrum","Anus","Aorta","Aortic body","Appendix","Aqueous fluid","Arm","Artery","Ascending colon","Ascending colon hepatic flexure","Ascites","Auditory canal","Autonomic nervous system","Axilla","Back","Bile duct","Bladder","Blood","Blood vessel","Bone","Bone marrow","Bowel","Brain","Brain stem","Breast","Broad ligament","Bronchiole","Bronchus","Brow","Buccal cavity","Buccal mucosa","Buttock","Calf","Capillary","Cardia","Carina","Carotid artery","Carotid body","Cartilage","Cecum","Cell-line","Central nervous system","Cerebellum","Cerebral cortex","Cerebrospinal fluid","Cerebrum","Cervical spine","Cervix","Chest","Chest wall","Chin","Clavicle","Clitoris","CNS/spinal","Colon","Colon - mucosa only","Colorectal","Common duct","Conjunctiva","Connective tissue","Dermal","Descending colon","Diaphragm","Duodenum","Ear","Ear canal","Ear - pinna (external)","Effusion","Elbow","Endocrine gland","Epididymis","Epidural space","Esophageal - distal","Esophageal - mid","Esophageal - proximal","Esophagogastric junction","Esophagus","Esophagus - mucosa only","Eye","Fallopian tube","Femoral artery","Femoral vein","Femur","Fibroblasts","Fibula","Finger","Floor of mouth","Fluid","Foot","Forearm","Forehead","Foreskin","Frontal cortex","Frontal lobe","Fundus of stomach","Gallbladder","Ganglia","Gastroesophageal junction","Gastrointestinal tract","Groin","Gum","Hand","Hard palate","Head - face or neck NOS","Head and neck","Heart","Hepatic","Hepatic duct","Hepatic flexure","Hepatic vein","Hip","Hippocampus","Humerus","Hypopharynx","Ileum","Ilium","Index finger","Ischium","Islet cells","Jaw","Jejunum","Joint","Kidney","Knee","Lacrimal gland","Large bowel","Laryngopharynx","Larynx","Leg","Leptomeninges","Ligament","Lip","Liver","Lumbar spine","Lung","Lymph node","Lymph node(s) axilla","Lymph node(s) cervical","Lymph node(s) distant","Lymph node(s) epitrochlear","Lymph node(s) femoral","Lymph node(s) hilar","Lymph node(s) iliac-common","Lymph node(s) iliac-external","Lymph node(s) inguinal","Lymph node(s) internal mammary","Lymph node(s) mammary","Lymph node(s) mesenteric","Lymph node(s) occipital","Lymph node(s) paraaortic","Lymph node(s) parotid","Lymph node(s) pelvic","Lymph node(s) popliteal","Lymph node(s) regional","Lymph node(s) retroperitoneal","Lymph node(s) scalene","Lymph node(s) splenic","Lymph node(s) subclavicular","Lymph node(s) submandibular","Lymph node(s) supraclavicular","Lymph nodes(s) mediastinal","Mandible","Maxilla","Mediastinal soft tissue","Mediastinum","Mesentery","Mesothelium","Middle finger","Mitochondria","Muscle","Nails","Nasal cavity","Nasal soft tissue","Nasopharynx","Neck","Nerve","Nerve(s) cranial","Occipital cortex","Ocular orbits","Omentum","Oral cavity","Oral cavity - mucosa only","Oropharynx","Other","Ovary","Palate","Pancreas","Paraspinal ganglion","Parathyroid","Parotid gland","Patella","Pelvis","Penis","Pericardium","Periorbital soft tissue","Peritoneal cavity","Peritoneum","Pharynx","Pineal","Pineal gland","Pituitary gland","Placenta","Pleura","Pleural effusion","Popliteal fossa","Prostate","Pylorus","Rectosigmoid junction","Rectum","Retina","Retro-orbital region","Retroperitoneum","Rib","Ring finger","Round ligament","Sacrum","Salivary gland","Scalp","Scapula","Sciatic nerve","Scrotum","Seminal vesicle","Shoulder","Sigmoid colon","Sinus","Sinus(es) - maxillary","Skeletal muscle","Skin","Skull","Small bowel","Small bowel - mucosa only","Small finger","Soft tissue","Spinal column","Spinal cord","Spleen","Splenic flexure","Sternum","Stomach","Stomach - mucosa only","Subcutaneous tissue","Synovium","Temporal cortex","Tendon","Testis","Thigh","Thoracic spine","Thorax","Throat","Thumb","Thymus","Thyroid","Tibia","Tongue","Tonsil","Tonsil (pharyngeal)","Trachea / major bronchi","Transverse colon","Trunk","Umbilical cord","Ureter","Urethra","Urinary tract","Uterus","Uvula","Vagina","Vas deferens","Vein","Venous","Vertebra","Vulva","White blood cells","Wrist"]},"meta":{"core":true,"dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse.","displayName":"Anatomic Site Progression or Recurrences"}},"diff":{"description":{"type":"updated","data":"Indicate the anatomic site where disease progression or recurrence occurred. (Codelist reference: NCI CDE ID: 4742851)"},"restrictions":{"codeList":{"type":"updated","data":{"added":["Ear - pinna (external)","Esophageal - distal","Esophageal - mid","Esophageal - proximal","Head - face or neck NOS","Sinus(es) - maxillary"],"deleted":["Ear, pinna (external)","Esophageal; distal","Esophageal; mid","Esophageal; proximal","Head - face or neck, NOS","Sinus(es), maxillary"]}}},"meta":{"displayName":{"type":"created","data":"Anatomic Site Progression or Recurrences"}}}}],["follow_up.recurrence_tumour_staging_system",{"left":{"description":"Specify the tumour staging system used to stage the cancer at time of retreatment for recurrence or disease progression. This may be represented as rTNM in the medical report.","name":"recurrence_tumour_staging_system","valueType":"string","restrictions":{"codeList":["Binet","Rai","FIGO","Ann Arbor","Murphy","Lugano","AJCC 8th Edition","AJCC 7th Edition","AJCC 6th Edition","AJCC 5th Edition","AJCC 4th Edition","AJCC 3rd Edition","AJCC 2nd Edition","AJCC 1st Edition"],"script":["(function validate() {\n\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* This is not a required field, so first ensure that it exists */\n        if ($field){\n            /* Contingent on the naming system for tumour staging systems to remain consistent */\n            const stagingName = $name.trim().toLowerCase().split('_tumour_staging_system')[0];\n            /* Perform validation only if an AJCC value was selected */\n            if (/^(AJCC)\\b/i.test($field)){\n                const requiredFields = [\n                    `${stagingName}_m_category`,\n                    `${stagingName}_n_category`,\n                    `${stagingName}_t_category`\n                ];\n                const convertedRow = Object.fromEntries(Object.entries($row).map(([fieldName,fieldVal]) => [fieldName.toLowerCase(), fieldVal]));\n                /* Check for contigous spaces wrapped with quotes (empty strings) */\n                const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n                /* search for fields with falsy values, given the field exists */\n                const emptyFields = requiredFields.filter(field => Object.keys(convertedRow).includes(field) && (!convertedRow[field] || checkforEmpty(convertedRow[field])))\n                if (emptyFields.length){\n                    result = {valid: false, \"message\": `The following fields are required when ${$name} is set to an AJCC option: ${emptyFields}`};\n                }\n            }\n        }\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus.match(/(progression)$/);\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\n        }\n\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"]},"meta":{"core":true,"dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse."}},"right":{"description":"Specify the tumour staging system used to stage the cancer at time of retreatment for recurrence or disease progression. This may be represented as rTNM in the medical report.","name":"recurrence_tumour_staging_system","valueType":"string","restrictions":{"codeList":["Binet","Rai","FIGO","Ann Arbor","Murphy","Lugano","AJCC 8th Edition","AJCC 7th Edition","AJCC 6th Edition","AJCC 5th Edition","AJCC 4th Edition","AJCC 3rd Edition","AJCC 2nd Edition","AJCC 1st Edition"],"script":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus.match(/(progression)$/);\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\n        }\n\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"]},"meta":{"core":true,"dependsOn":"follow_up.disease_status_at_followup","notes":"This field is required to be submitted if disease_status_at_followup indicates progression or relapse.","displayName":"Recurrance Tumour Staging System"}},"diff":{"restrictions":{"script":{"type":"updated","data":{"added":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"],"deleted":["(function validate() {\n\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* This is not a required field, so first ensure that it exists */\n        if ($field){\n            /* Contingent on the naming system for tumour staging systems to remain consistent */\n            const stagingName = $name.trim().toLowerCase().split('_tumour_staging_system')[0];\n            /* Perform validation only if an AJCC value was selected */\n            if (/^(AJCC)\\b/i.test($field)){\n                const requiredFields = [\n                    `${stagingName}_m_category`,\n                    `${stagingName}_n_category`,\n                    `${stagingName}_t_category`\n                ];\n                const convertedRow = Object.fromEntries(Object.entries($row).map(([fieldName,fieldVal]) => [fieldName.toLowerCase(), fieldVal]));\n                /* Check for contigous spaces wrapped with quotes (empty strings) */\n                const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n                /* search for fields with falsy values, given the field exists */\n                const emptyFields = requiredFields.filter(field => Object.keys(convertedRow).includes(field) && (!convertedRow[field] || checkforEmpty(convertedRow[field])))\n                if (emptyFields.length){\n                    result = {valid: false, \"message\": `The following fields are required when ${$name} is set to an AJCC option: ${emptyFields}`};\n                }\n            }\n        }\n        return result;\n    })()"]}}},"meta":{"displayName":{"type":"created","data":"Recurrance Tumour Staging System"}}}}],["follow_up.recurrence_t_category",{"left":{"name":"recurrence_t_category","description":"The code to represent the extent of the primary tumour (T) based on evidence obtained from clinical assessment parameters determined after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"follow_up.recurrence_tumour_staging_system","notes":"This field is required only if the selected recurrence_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"recurrence_t_category","description":"The code to represent the extent of the primary tumour (T) based on evidence obtained from clinical assessment parameters determined after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"follow_up.recurrence_tumour_staging_system","notes":"This field is required only if the selected recurrence_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Recurrence T Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Recurrence T Category"}}}}],["follow_up.recurrence_n_category",{"left":{"name":"recurrence_n_category","description":"The code to represent the stage of cancer defined by which is the extent of the regional lymph node (N) involvement for the cancer based on evidence obtained from clinical assessment parameters determined determined at the time of retreatment for a recurrence or disease progression, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"follow_up.recurrence_tumour_staging_system","notes":"This field is required only if the selected recurrence_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"recurrence_n_category","description":"The code to represent the stage of cancer defined by which is the extent of the regional lymph node (N) involvement for the cancer based on evidence obtained from clinical assessment parameters determined determined at the time of retreatment for a recurrence or disease progression, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"follow_up.recurrence_tumour_staging_system","notes":"This field is required only if the selected recurrence_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Recurrence N Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Recurrence N Category"}}}}],["follow_up.recurrence_m_category",{"left":{"name":"recurrence_m_category","description":"The code to represent the stage of cancer defined bythe extent of the distant metastasis (M) for the cancer based on evidence obtained from clinical assessment parameters determined determined at the time of retreatment for a recurrence or disease progression, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"follow_up.recurrence_tumour_staging_system","notes":"This field is required only if the selected recurrence_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"recurrence_m_category","description":"The code to represent the stage of cancer defined bythe extent of the distant metastasis (M) for the cancer based on evidence obtained from clinical assessment parameters determined determined at the time of retreatment for a recurrence or disease progression, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"core":true,"dependsOn":"follow_up.recurrence_tumour_staging_system","notes":"This field is required only if the selected recurrence_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Recurrence M Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Recurrence M Category"}}}}],["follow_up.recurrence_stage_group",{"left":{"name":"recurrence_stage_group","description":"The code to represent the stage group of the tumour, as assigned by the reporting recurrence_tumour_staging_system, that indicates the overall prognostic tumour stage (ie. Stage I, Stage II, Stage III etc.) after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery.","valueType":"string","meta":{"core":true,"dependsOn":"follow_up.recurrence_tumour_staging_system"}},"right":{"name":"recurrence_stage_group","description":"The code to represent the stage group of the tumour, as assigned by the reporting recurrence_tumour_staging_system, that indicates the overall prognostic tumour stage (ie. Stage I, Stage II, Stage III etc.) after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery.","valueType":"string","meta":{"core":true,"dependsOn":"follow_up.recurrence_tumour_staging_system","displayName":"Recurrence Stage Group"}},"diff":{"meta":{"displayName":{"type":"created","data":"Recurrence Stage Group"}}}}],["follow_up.posttherapy_tumour_staging_system",{"left":{"description":"Specify the tumour staging system used to stage the cancer after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery. This may be represented as ypTNM or ycTNM in the medical report.","name":"posttherapy_tumour_staging_system","valueType":"string","restrictions":{"script":["(function validate() {\n\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* This is not a required field, so first ensure that it exists */\n        if ($field){\n            /* Contingent on the naming system for tumour staging systems to remain consistent */\n            const stagingName = $name.trim().toLowerCase().split('_tumour_staging_system')[0];\n            /* Perform validation only if an AJCC value was selected */\n            if (/^(AJCC)\\b/i.test($field)){\n                const requiredFields = [\n                    `${stagingName}_m_category`,\n                    `${stagingName}_n_category`,\n                    `${stagingName}_t_category`\n                ];\n                const convertedRow = Object.fromEntries(Object.entries($row).map(([fieldName,fieldVal]) => [fieldName.toLowerCase(), fieldVal]));\n                /* Check for contigous spaces wrapped with quotes (empty strings) */\n                const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n                /* search for fields with falsy values, given the field exists */\n                const emptyFields = requiredFields.filter(field => Object.keys(convertedRow).includes(field) && (!convertedRow[field] || checkforEmpty(convertedRow[field])))\n                if (emptyFields.length){\n                    result = {valid: false, \"message\": `The following fields are required when ${$name} is set to an AJCC option: ${emptyFields}`};\n                }\n            }\n        }\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus.match(/(progression)$/);\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\n        }\n\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"],"codeList":["Binet","Rai","FIGO","Ann Arbor","Murphy","Lugano","AJCC 8th Edition","AJCC 7th Edition","AJCC 6th Edition","AJCC 5th Edition","AJCC 4th Edition","AJCC 3rd Edition","AJCC 2nd Edition","AJCC 1st Edition"]}},"right":{"description":"Specify the tumour staging system used to stage the cancer after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery. This may be represented as ypTNM or ycTNM in the medical report.","name":"posttherapy_tumour_staging_system","valueType":"string","restrictions":{"script":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"],"codeList":["Binet","Rai","FIGO","Ann Arbor","Murphy","Lugano","AJCC 8th Edition","AJCC 7th Edition","AJCC 6th Edition","AJCC 5th Edition","AJCC 4th Edition","AJCC 3rd Edition","AJCC 2nd Edition","AJCC 1st Edition"]},"meta":{"displayName":"Post-therapy Tumour Staging System"}},"diff":{"restrictions":{"script":{"type":"updated","data":{"added":["(function validate() {\n    let result = { valid: true, message: 'Ok' };\n    const arrayFormatter = arr => `\\n${arr.map(entry => `- \"${entry}\"`).join('\\n')}`;\n    /* This is not a required field, so first ensure that it exists */\n    if ($field) {\n      /* Contingent on the naming system for tumour staging systems to remain consistent */\n      const stagingName = $name\n        .trim()\n        .toLowerCase()\n        .split('_tumour_staging_system')[0];\n      const requiredFields = [\n        `${stagingName}_m_category`,\n        `${stagingName}_n_category`,\n        `${stagingName}_t_category`,\n      ];\n      const convertedRow = Object.fromEntries(\n        Object.entries($row).map(([fieldName, fieldVal]) => [fieldName.toLowerCase(), fieldVal]),\n      );\n      /* Check for contigous spaces wrapped with quotes (empty strings) */\n      const checkforEmpty = entry => {\n        return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n      };\n\n      /* search for fields with falsy values*/\n      const emptyFields = requiredFields.filter(\n        field => !convertedRow[field] || checkforEmpty(convertedRow[field]),\n      );\n\n      /* The fields should be provided IF and ONLY IF the AJCC regex passes */\n      if (/^(AJCC)\\b/i.test($field) && emptyFields.length) {\n        result = {\n          valid: false,\n          message: `The following fields are required when ${$name} is set to an AJCC option: ${arrayFormatter(\n            emptyFields,\n          )}`,\n        };\n      } else if (!/^(AJCC)\\b/i.test($field) && emptyFields.length != requiredFields.length) {\n        const errorFields = requiredFields.filter(fieldName => !emptyFields.includes(fieldName));\n        result = {\n          valid: false,\n          message: `The following fields cannot be provided when ${$name} is not set to an AJCC option: ${arrayFormatter(\n            errorFields,\n          )}`,\n        };\n      }\n    }\n    return result;\n  })()"],"deleted":["(function validate() {\n\n        let result = {valid: true, message: \"Ok\"};\n        \n        /* This is not a required field, so first ensure that it exists */\n        if ($field){\n            /* Contingent on the naming system for tumour staging systems to remain consistent */\n            const stagingName = $name.trim().toLowerCase().split('_tumour_staging_system')[0];\n            /* Perform validation only if an AJCC value was selected */\n            if (/^(AJCC)\\b/i.test($field)){\n                const requiredFields = [\n                    `${stagingName}_m_category`,\n                    `${stagingName}_n_category`,\n                    `${stagingName}_t_category`\n                ];\n                const convertedRow = Object.fromEntries(Object.entries($row).map(([fieldName,fieldVal]) => [fieldName.toLowerCase(), fieldVal]));\n                /* Check for contigous spaces wrapped with quotes (empty strings) */\n                const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n                /* search for fields with falsy values, given the field exists */\n                const emptyFields = requiredFields.filter(field => Object.keys(convertedRow).includes(field) && (!convertedRow[field] || checkforEmpty(convertedRow[field])))\n                if (emptyFields.length){\n                    result = {valid: false, \"message\": `The following fields are required when ${$name} is set to an AJCC option: ${emptyFields}`};\n                }\n            }\n        }\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus.match(/(progression)$/);\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\n        }\n\n        return result;\n    })()","(function validate() {\n        let result = {valid: true, message: \"Ok\"};\n\n        /* required field, cannot be null */\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\n\n        const isRequired = diseaseStatus === \"relapse\";\n\n        // checks for a string just consisting of whitespace\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n\n        if (isRequired && (!$field || checkforEmpty($field))){\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\n        }\n\n        return result;\n    })()"]}}},"meta":{"type":"created","data":{"displayName":"Post-therapy Tumour Staging System"}}}}],["follow_up.posttherapy_t_category",{"left":{"name":"posttherapy_t_category","description":"The code to represent the extent of the primary tumour (T) based on evidence obtained from clinical assessment parameters determined after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"dependsOn":"follow_up.post_therapy_tumour_staging_system","notes":"This field is required only if the selected posttherapy_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"posttherapy_t_category","description":"The code to represent the extent of the primary tumour (T) based on evidence obtained from clinical assessment parameters determined after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"dependsOn":"follow_up.post_therapy_tumour_staging_system","notes":"This field is required only if the selected posttherapy_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Post-therapy T Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Post-therapy T Category"}}}}],["follow_up.posttherapy_n_category",{"left":{"name":"posttherapy_n_category","description":"The code to represent the stage of cancer defined by which is the extent of the regional lymph node (N) involvement for the cancer based on evidence obtained from clinical assessment parameters determined determined after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"dependsOn":"follow_up.post_therapy_tumour_staging_system","notes":"This field is required only if the selected posttherapy_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"posttherapy_n_category","description":"The code to represent the stage of cancer defined by which is the extent of the regional lymph node (N) involvement for the cancer based on evidence obtained from clinical assessment parameters determined determined after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"dependsOn":"follow_up.post_therapy_tumour_staging_system","notes":"This field is required only if the selected posttherapy_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Post-therapy N Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Post-therapy N Category"}}}}],["follow_up.posttherapy_m_category",{"left":{"name":"posttherapy_m_category","description":"The code to represent the stage of cancer defined bythe extent of the distant metastasis (M) for the cancer based on evidence obtained from clinical assessment parameters determined determined after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"dependsOn":"follow_up.post_therapy_tumour_staging_system","notes":"This field is required only if the selected posttherapy_tumour_staging_system is any edition of the AJCC cancer staging system."}},"right":{"name":"posttherapy_m_category","description":"The code to represent the stage of cancer defined bythe extent of the distant metastasis (M) for the cancer based on evidence obtained from clinical assessment parameters determined determined after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery, according to criteria based on multiple editions of the AJCC's Cancer Staging Manual.","valueType":"string","meta":{"dependsOn":"follow_up.post_therapy_tumour_staging_system","notes":"This field is required only if the selected posttherapy_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Post-therapy M Category"}},"diff":{"meta":{"displayName":{"type":"created","data":"Post-therapy M Category"}}}}],["follow_up.posttherapy_stage_group",{"left":{"name":"posttherapy_stage_group","description":"The code to represent the stage group of the tumour, as assigned by the reporting posttherapy_tumour_staging_system, that indicates the overall prognostic tumour stage (ie. Stage I, Stage II, Stage III etc.) after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery.","valueType":"string","meta":{"dependsOn":"follow_up.post_therapy_tumour_staging_system","notes":"This field value is dependent on the selected posttherapy_tumour_staging_system."}},"right":{"name":"posttherapy_stage_group","description":"The code to represent the stage group of the tumour, as assigned by the reporting posttherapy_tumour_staging_system, that indicates the overall prognostic tumour stage (ie. Stage I, Stage II, Stage III etc.) after treatment for patients receiving systemic and/or radiation therapy alone or as a component of their initial treatment, or as neoadjuvant therapy before planned surgery.","valueType":"string","meta":{"dependsOn":"follow_up.post_therapy_tumour_staging_system","notes":"This field is required only if the selected posttherapy_tumour_staging_system is any edition of the AJCC cancer staging system.","displayName":"Post-therapy Stage Group"}},"diff":{"meta":{"notes":{"type":"updated","data":"This field is required only if the selected posttherapy_tumour_staging_system is any edition of the AJCC cancer staging system."},"displayName":{"type":"created","data":"Post-therapy Stage Group"}}}}],["donor.primary_site",{"right":{"name":"primary_site","valueType":"string","description":"The text term used to describe the primary site of disease, as categorized by the World Health Organization's (WHO) International Classification of Diseases for Oncology (ICD-O). This categorization groups cases into general categories.","meta":{"displayName":"Primary Site","core":true},"restrictions":{"required":true,"codeList":["Accessory sinuses","Adrenal gland","Anus and anal canal","Base of tongue","Bladder","Bones, joints and articular cartilage of limbs","Bones, joints and articular cartilage of other and unspecified sites","Brain","Breast","Bronchus and lung","Cervix uteri","Colon","Connective, subcutaneous and other soft tissues","Corpus uteri","Esophagus","Eye and adnexa","Floor of mouth","Gallbladder","Gum","Heart, mediastinum, and pleura","Hematopoietic and reticuloendothelial systems","Hypopharynx","Kidney","Larynx","Lip","Liver and intrahepatic bile ducts","Lymph nodes","Meninges","Nasal cavity and middle ear","Nasopharynx","Oropharynx","Other and ill-defined digestive organs","Other and ill-defined sites","Other and ill-defined sites in lip, oral cavity and pharynx","Other and ill-defined sites within respiratory system and intrathoracic organs","Other and unspecified female genital organs","Other and unspecified major salivary glands","Other and unspecified male genital organs","Other and unspecified parts of biliary tract","Other and unspecified parts of mouth","Other and unspecified parts of tongue","Other and unspecified urinary organs","Other endocrine glands and related structures","Ovary","Palate","Pancreas","Parotid gland","Penis","Peripheral nerves and autonomic nervous system","Placenta","Prostate gland","Pyriform sinus","Rectosigmoid junction","Rectum","Renal pelvis","Retroperitoneum and peritoneum","Skin","Small intestine","Spinal cord, cranial nerves, and other parts of central nervous system","Stomach","Testis","Thymus","Thyroid gland","Tonsil","Trachea","Ureter","Uterus, NOS","Vagina","Vulva","Unknown","Not Reported"]}},"diff":{"type":"created","data":{"name":"primary_site","valueType":"string","description":"The text term used to describe the primary site of disease, as categorized by the World Health Organization's (WHO) International Classification of Diseases for Oncology (ICD-O). This categorization groups cases into general categories.","meta":{"displayName":"Primary Site","core":true},"restrictions":{"required":true,"codeList":["Accessory sinuses","Adrenal gland","Anus and anal canal","Base of tongue","Bladder","Bones, joints and articular cartilage of limbs","Bones, joints and articular cartilage of other and unspecified sites","Brain","Breast","Bronchus and lung","Cervix uteri","Colon","Connective, subcutaneous and other soft tissues","Corpus uteri","Esophagus","Eye and adnexa","Floor of mouth","Gallbladder","Gum","Heart, mediastinum, and pleura","Hematopoietic and reticuloendothelial systems","Hypopharynx","Kidney","Larynx","Lip","Liver and intrahepatic bile ducts","Lymph nodes","Meninges","Nasal cavity and middle ear","Nasopharynx","Oropharynx","Other and ill-defined digestive organs","Other and ill-defined sites","Other and ill-defined sites in lip, oral cavity and pharynx","Other and ill-defined sites within respiratory system and intrathoracic organs","Other and unspecified female genital organs","Other and unspecified major salivary glands","Other and unspecified male genital organs","Other and unspecified parts of biliary tract","Other and unspecified parts of mouth","Other and unspecified parts of tongue","Other and unspecified urinary organs","Other endocrine glands and related structures","Ovary","Palate","Pancreas","Parotid gland","Penis","Peripheral nerves and autonomic nervous system","Placenta","Prostate gland","Pyriform sinus","Rectosigmoid junction","Rectum","Renal pelvis","Retroperitoneum and peritoneum","Skin","Small intestine","Spinal cord, cranial nerves, and other parts of central nervous system","Stomach","Testis","Thymus","Thyroid gland","Tonsil","Trachea","Ureter","Uterus, NOS","Vagina","Vulva","Unknown","Not Reported"]}}}}],["specimen.submitter_primary_diagnosis_id",{"right":{"name":"submitter_primary_diagnosis_id","valueType":"string","description":"Indicate the primary diagnosis event in the clinical timeline that this specimen aquisition was related to.","meta":{"primaryId":true,"displayName":"Submitter Primary Diagnosis ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_primary_diagnosis_id","valueType":"string","description":"Indicate the primary diagnosis event in the clinical timeline that this specimen aquisition was related to.","meta":{"primaryId":true,"displayName":"Submitter Primary Diagnosis ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["primary_diagnosis.submitter_primary_diagnosis_id",{"right":{"name":"submitter_primary_diagnosis_id","valueType":"string","description":"Unique identifier of the primary diagnosis event, assigned by the data provider.","meta":{"primaryId":true,"displayName":"Submitter Primary Diagnosis ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_primary_diagnosis_id","valueType":"string","description":"Unique identifier of the primary diagnosis event, assigned by the data provider.","meta":{"primaryId":true,"displayName":"Submitter Primary Diagnosis ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["primary_diagnosis.basis_of_diagnosis",{"right":{"name":"basis_of_diagnosis","description":"Indicate the most valid basis of how the primary diagnosis was identified. If more than one diagnosis technique was used, select the term that has the highest code number (see notes). (Reference: IACR Standard for Basis of Diagnosis http://www.iacr.com.fr/images/doc/basis.pdf)","restrictions":{"codeList":["Death certificate only","Clinical","Clinical investigation","Specific tumour markers","Cytology","Histology of a metastasis","Histology of a primary tumour","Unknown"]},"valueType":"string","meta":{"notes":"0: Death certificate only: Information provided is from a death certificate.\n1: Clinical: Diagnosis made before death.\n2: Clinical investigation: All diagnostic techniques, including X-ray, endoscopy, imaging, ultrasound, exploratory surgery (such as laparotomy), and autopsy, without a tissue diagnosis.\n4: Specific tumour markers: Including biochemical and/or immunologic markers that are specific for a tumour site.\n5: Cytology: Examination of cells from a primary or secondary site, including fluids aspirated by endoscopy or needle; also includes the microscopic examination of peripheral blood and bone marrow aspirates.\n6: Histology of a metastasis: Histologic examination of tissue from a metastasis, including autopsy specimens.\n7: Histology of a primary tumour: Histologic examination of tissue from primary tumour, however obtained, including all cutting techniques and bone marrow biopsies; also includes autopsy specimens of primary tumour.\n9: Unknown: No information on how the diagnosis has been made.","displayName":"Basis of Diagnosis"}},"diff":{"type":"created","data":{"name":"basis_of_diagnosis","description":"Indicate the most valid basis of how the primary diagnosis was identified. If more than one diagnosis technique was used, select the term that has the highest code number (see notes). (Reference: IACR Standard for Basis of Diagnosis http://www.iacr.com.fr/images/doc/basis.pdf)","restrictions":{"codeList":["Death certificate only","Clinical","Clinical investigation","Specific tumour markers","Cytology","Histology of a metastasis","Histology of a primary tumour","Unknown"]},"valueType":"string","meta":{"notes":"0: Death certificate only: Information provided is from a death certificate.\n1: Clinical: Diagnosis made before death.\n2: Clinical investigation: All diagnostic techniques, including X-ray, endoscopy, imaging, ultrasound, exploratory surgery (such as laparotomy), and autopsy, without a tissue diagnosis.\n4: Specific tumour markers: Including biochemical and/or immunologic markers that are specific for a tumour site.\n5: Cytology: Examination of cells from a primary or secondary site, including fluids aspirated by endoscopy or needle; also includes the microscopic examination of peripheral blood and bone marrow aspirates.\n6: Histology of a metastasis: Histologic examination of tissue from a metastasis, including autopsy specimens.\n7: Histology of a primary tumour: Histologic examination of tissue from primary tumour, however obtained, including all cutting techniques and bone marrow biopsies; also includes autopsy specimens of primary tumour.\n9: Unknown: No information on how the diagnosis has been made.","displayName":"Basis of Diagnosis"}}}}],["treatment.submitter_primary_diagnosis_id",{"right":{"name":"submitter_primary_diagnosis_id","valueType":"string","description":"Indicate the primary diagnosis event in the clinical timeline that this treatment was related to.","meta":{"primaryId":true,"displayName":"Submitter Primary Diagnosis ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_primary_diagnosis_id","valueType":"string","description":"Indicate the primary diagnosis event in the clinical timeline that this treatment was related to.","meta":{"primaryId":true,"displayName":"Submitter Primary Diagnosis ID"},"restrictions":{"required":true,"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["chemotherapy.drug_rxnormcui",{"right":{"name":"drug_rxnormcui","description":"The unique RxNormID assigned to the treatment regimen drug.","valueType":"string","meta":{"validationDependency":true,"core":true,"notes":"This field uses a controlled vocabulary gathered from the RxNorm database of drug names provided by the NIH (https://www.nlm.nih.gov/research/umls/rxnorm).","displayName":"RxNormCUI"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"drug_rxnormcui","description":"The unique RxNormID assigned to the treatment regimen drug.","valueType":"string","meta":{"validationDependency":true,"core":true,"notes":"This field uses a controlled vocabulary gathered from the RxNorm database of drug names provided by the NIH (https://www.nlm.nih.gov/research/umls/rxnorm).","displayName":"RxNormCUI"},"restrictions":{"required":true}}}}],["chemotherapy.drug_name",{"right":{"name":"drug_name","description":"Name of agent or drug administered to patient as part of the treatment regimen.","valueType":"string","meta":{"validationDependency":true,"core":true,"notes":"This field uses a controlled vocabulary gathered from the RxNorm database of drug names provided by the NIH (https://www.nlm.nih.gov/research/umls/rxnorm).","displayName":"Chemotherapy Drug Name"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"drug_name","description":"Name of agent or drug administered to patient as part of the treatment regimen.","valueType":"string","meta":{"validationDependency":true,"core":true,"notes":"This field uses a controlled vocabulary gathered from the RxNorm database of drug names provided by the NIH (https://www.nlm.nih.gov/research/umls/rxnorm).","displayName":"Chemotherapy Drug Name"},"restrictions":{"required":true}}}}],["hormone_therapy.drug_rxnormcui",{"right":{"name":"drug_rxnormcui","description":"The unique RxNormID assigned to the treatment regimen drug.","valueType":"string","meta":{"core":true,"notes":"This field uses a controlled vocabulary gathered from the RxNorm database of drug names provided by the NIH (https://www.nlm.nih.gov/research/umls/rxnorm).","displayName":"RxNormCUI"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"drug_rxnormcui","description":"The unique RxNormID assigned to the treatment regimen drug.","valueType":"string","meta":{"core":true,"notes":"This field uses a controlled vocabulary gathered from the RxNorm database of drug names provided by the NIH (https://www.nlm.nih.gov/research/umls/rxnorm).","displayName":"RxNormCUI"},"restrictions":{"required":true}}}}],["hormone_therapy.drug_name",{"right":{"name":"drug_name","description":"Name of agent or drug administered to patient as part of the treatment regimen.","valueType":"string","meta":{"core":true,"notes":"This field uses a controlled vocabulary gathered from the RxNorm database of drug names provided by the NIH (https://www.nlm.nih.gov/research/umls/rxnorm).","displayName":"Hormone Therapy Drug Name"},"restrictions":{"required":true}},"diff":{"type":"created","data":{"name":"drug_name","description":"Name of agent or drug administered to patient as part of the treatment regimen.","valueType":"string","meta":{"core":true,"notes":"This field uses a controlled vocabulary gathered from the RxNorm database of drug names provided by the NIH (https://www.nlm.nih.gov/research/umls/rxnorm).","displayName":"Hormone Therapy Drug Name"},"restrictions":{"required":true}}}}],["follow_up.submitter_primary_diagnosis_id",{"right":{"name":"submitter_primary_diagnosis_id","valueType":"string","description":"Indicate if the follow-up is related to a specific primary diagnosis event in the clinical timeline.","meta":{"displayName":"Submitter Primary Diagnosis ID","primaryId":true},"restrictions":{"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_primary_diagnosis_id","valueType":"string","description":"Indicate if the follow-up is related to a specific primary diagnosis event in the clinical timeline.","meta":{"displayName":"Submitter Primary Diagnosis ID","primaryId":true},"restrictions":{"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["follow_up.submitter_treatment_id",{"right":{"name":"submitter_treatment_id","valueType":"string","description":"Indicate if the follow-up is related to a specific treatment event in the clinical timeline.","meta":{"primaryId":true,"displayName":"Submitter Treatment ID"},"restrictions":{"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}},"diff":{"type":"created","data":{"name":"submitter_treatment_id","valueType":"string","description":"Indicate if the follow-up is related to a specific treatment event in the clinical timeline.","meta":{"primaryId":true,"displayName":"Submitter Treatment ID"},"restrictions":{"regex":"\\b(?!([Dd][Oo])|([Ss][Pp])|([Ss][Aa])|([Tt][Rr])|([pP][Dd])|([Ff][Uu]))\\b^[A-Za-z0-9\\-\\._]{1,64}"}}}}],["follow_up.weight_at_followup",{"right":{"description":"Indicate the donor's weight, in kilograms (kg), at the time of follow-up.","name":"weight_at_followup","valueType":"integer","meta":{"displayName":"Weight at Follow-Up"}},"diff":{"type":"created","data":{"description":"Indicate the donor's weight, in kilograms (kg), at the time of follow-up.","name":"weight_at_followup","valueType":"integer","meta":{"displayName":"Weight at Follow-Up"}}}}]]