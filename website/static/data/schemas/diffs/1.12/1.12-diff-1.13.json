{
  "schemas": {
    "donor": {
      "updated": {
        "vital_status": {
          "restrictions": {
            "codeList": {
              "left": ["Alive", "Deceased", "Unknown"],
              "right": ["Alive", "Deceased"],
              "data": { "added": [], "deleted": ["Unknown"] }
            }
          }
        },

        "age_at_menarche": {
          "description": {
            "left": "Indicate the donor's age at which the first menstruation event occurred. (Reference: NCIt C19666)",
            "right": "Indicate the donor's age, in years, at which the first menstruation event occurred. (Reference: NCIt C19666)"
          }
        }
      },

      "created": {},
      "deleted": {}
    },
    "specimen": {
      "updated": {
        "pathological_tumour_staging_system": {
          "restrictions": {
            "codeList": {
              "left": [
                "AJCC 8th edition",
                "AJCC 7th edition",
                "Ann Arbor staging system",
                "Binet staging system",
                "Durie-Salmon staging system",
                "FIGO staging system",
                "Lugano staging system",
                "Rai staging system",
                "Revised International staging system (RISS)",
                "St Jude staging system"
              ],
              "right": [
                "AJCC 8th edition",
                "AJCC 7th edition",
                "AJCC 6th edition",
                "Ann Arbor staging system",
                "Binet staging system",
                "Durie-Salmon staging system",
                "FIGO staging system",
                "Lugano staging system",
                "Rai staging system",
                "Revised International staging system (RISS)",
                "St Jude staging system"
              ],
              "data": { "added": ["AJCC 6th edition"], "deleted": [] }
            }
          }
        },
        "pathological_t_category": {
          "restrictions": {
            "codeList": {
              "left": [
                "T0",
                "T1",
                "T1a",
                "T1a1",
                "T1a2",
                "T1b",
                "T1b1",
                "T1b2",
                "T1c",
                "T1d",
                "T1mi",
                "T2",
                "T2a",
                "T2a1",
                "T2a2",
                "T2b",
                "T2c",
                "T2d",
                "T3",
                "T3a",
                "T3b",
                "T3c",
                "T3d",
                "T3e",
                "T4",
                "T4a",
                "T4b",
                "T4c",
                "T4d",
                "T4e",
                "Ta",
                "Tis",
                "Tis(DCIS)",
                "Tis(LAMN)",
                "Tis(LCIS)",
                "Tis(Paget)",
                "Tis(Paget’s)",
                "Tis pd",
                "Tis pu",
                "TX"
              ],
              "right": [
                "T0",
                "T1",
                "T1a",
                "T1a1",
                "T1a2",
                "T1a(s)",
                "T1a(m)",
                "T1b",
                "T1b1",
                "T1b2",
                "T1b(s)",
                "T1b(m)",
                "T1c",
                "T1d",
                "T1mi",
                "T2",
                "T2(s)",
                "T2(m)",
                "T2a",
                "T2a1",
                "T2a2",
                "T2b",
                "T2c",
                "T2d",
                "T3",
                "T3(s)",
                "T3(m)",
                "T3a",
                "T3b",
                "T3c",
                "T3d",
                "T3e",
                "T4",
                "T4a",
                "T4a(s)",
                "T4a(m)",
                "T4b",
                "T4b(s)",
                "T4b(m)",
                "T4c",
                "T4d",
                "T4e",
                "Ta",
                "Tis",
                "Tis(DCIS)",
                "Tis(LAMN)",
                "Tis(LCIS)",
                "Tis(Paget)",
                "Tis(Paget’s)",
                "Tis pd",
                "Tis pu",
                "TX"
              ],
              "data": {
                "added": [
                  "T1a(s)",
                  "T1a(m)",
                  "T1b(s)",
                  "T1b(m)",
                  "T2(s)",
                  "T2(m)",
                  "T3(s)",
                  "T3(m)",
                  "T4a(s)",
                  "T4a(m)",
                  "T4b(s)",
                  "T4b(m)"
                ],
                "deleted": []
              }
            }
          }
        },
        "pathological_m_category": {
          "restrictions": {
            "codeList": {
              "left": [
                "M0",
                "M0(i+)",
                "M1",
                "M1a",
                "M1a(0)",
                "M1a(1)",
                "M1b",
                "M1b(0)",
                "M1b(1)",
                "M1c",
                "M1c(0)",
                "M1c(1)",
                "M1d",
                "M1d(0)",
                "M1d(1)",
                "M1e"
              ],
              "right": [
                "M0",
                "M0(i+)",
                "M1",
                "M1a",
                "M1a(0)",
                "M1a(1)",
                "M1b",
                "M1b(0)",
                "M1b(1)",
                "M1c",
                "M1c(0)",
                "M1c(1)",
                "M1d",
                "M1d(0)",
                "M1d(1)",
                "M1e",
                "MX"
              ],
              "data": { "added": ["MX"], "deleted": [] }
            },
            "script": {
              "left": null,
              "right": [
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n    const stagingSystems = ['ajcc 7th edition', 'ajcc 8th edition'];\n    const stagingName = $name.trim().toLowerCase().split('_m_category')[0];\n    const tumourStagingSystem = `${stagingName}_tumour_staging_system`;\n\n    /* Check for contigous spaces wrapped with quotes (empty strings) */\n    const checkforEmpty = entry => {\n      return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n    };\n  \n   \n    if ($row[tumourStagingSystem] && $row[tumourStagingSystem] != null && !(checkforEmpty($row[tumourStagingSystem]))) {\n      if (stagingSystems.includes($row[tumourStagingSystem].trim().toLowerCase())) {\n         if ($field && $field != null && !(checkforEmpty($field)) && $field.trim().toLowerCase() === 'mx') {\n           result = {\n             valid: false,\n             message: `The designation of '${$field}' in the '${$name}' field is not a valid M category in the ${tumourStagingSystem} '${$row[tumourStagingSystem]}'.`\n           };\n         }\n      }\n    }\n    return result;\n})"
              ]
            }
          }
        },

        "percent_proliferating_cells": {
          "meta": {
            "notes": {
              "left": "",
              "right": "This field should only be submitted if the specimen is tumour."
            }
          }
        },
        "percent_inflammatory_tissue": {
          "meta": {
            "notes": {
              "left": "",
              "right": "This field should only be submitted if the specimen is tumour."
            }
          }
        },
        "percent_stromal_cells": {
          "meta": {
            "notes": {
              "left": "",
              "right": "This field should only be submitted if the specimen is tumour."
            }
          }
        },
        "percent_necrosis": {
          "meta": {
            "notes": {
              "left": "",
              "right": "This field should only be submitted if the specimen is tumour."
            }
          }
        }
      },
      "created": {
        "specimen_laterality": {
          "changeType": "created",
          "name": "specimen_laterality",
          "description": "For cancer in a paired organ, indicate the side on which the specimen was obtained. (Reference caDSR 2007875)",
          "valueType": "string",
          "restrictions": { "codeList": ["Left", "Right", "Unknown"] },
          "meta": { "displayName": "Specimen Laterality" }
        }
      },
      "deleted": {}
    },
    "primary_diagnosis": {
      "updated": {
        "number_lymph_nodes_examined": {
          "meta": {
            "notes": {
              "left": null,
              "right": "This field should only be submitted if 'lymph_nodes_examined_status' is 'Yes'."
            }
          }
        },

        "clinical_tumour_staging_system": {
          "restrictions": {
            "codeList": {
              "left": [
                "AJCC 8th edition",
                "AJCC 7th edition",
                "Ann Arbor staging system",
                "Binet staging system",
                "Durie-Salmon staging system",
                "FIGO staging system",
                "Lugano staging system",
                "Rai staging system",
                "Revised International staging system (RISS)",
                "St Jude staging system"
              ],
              "right": [
                "AJCC 8th edition",
                "AJCC 7th edition",
                "AJCC 6th edition",
                "Ann Arbor staging system",
                "Binet staging system",
                "Durie-Salmon staging system",
                "FIGO staging system",
                "Lugano staging system",
                "Rai staging system",
                "Revised International staging system (RISS)",
                "St Jude staging system"
              ],
              "data": { "added": ["AJCC 6th edition"], "deleted": [] }
            }
          }
        },
        "clinical_t_category": {
          "restrictions": {
            "codeList": {
              "left": [
                "T0",
                "T1",
                "T1a",
                "T1a1",
                "T1a2",
                "T1b",
                "T1b1",
                "T1b2",
                "T1c",
                "T1d",
                "T1mi",
                "T2",
                "T2a",
                "T2a1",
                "T2a2",
                "T2b",
                "T2c",
                "T2d",
                "T3",
                "T3a",
                "T3b",
                "T3c",
                "T3d",
                "T3e",
                "T4",
                "T4a",
                "T4b",
                "T4c",
                "T4d",
                "T4e",
                "Ta",
                "Tis",
                "Tis(DCIS)",
                "Tis(LAMN)",
                "Tis(LCIS)",
                "Tis(Paget)",
                "Tis(Paget’s)",
                "Tis pd",
                "Tis pu",
                "TX"
              ],
              "right": [
                "T0",
                "T1",
                "T1a",
                "T1a1",
                "T1a2",
                "T1a(s)",
                "T1a(m)",
                "T1b",
                "T1b1",
                "T1b2",
                "T1b(s)",
                "T1b(m)",
                "T1c",
                "T1d",
                "T1mi",
                "T2",
                "T2(s)",
                "T2(m)",
                "T2a",
                "T2a1",
                "T2a2",
                "T2b",
                "T2c",
                "T2d",
                "T3",
                "T3(s)",
                "T3(m)",
                "T3a",
                "T3b",
                "T3c",
                "T3d",
                "T3e",
                "T4",
                "T4a",
                "T4a(s)",
                "T4a(m)",
                "T4b",
                "T4b(s)",
                "T4b(m)",
                "T4c",
                "T4d",
                "T4e",
                "Ta",
                "Tis",
                "Tis(DCIS)",
                "Tis(LAMN)",
                "Tis(LCIS)",
                "Tis(Paget)",
                "Tis(Paget’s)",
                "Tis pd",
                "Tis pu",
                "TX"
              ],
              "data": {
                "added": [
                  "T1a(s)",
                  "T1a(m)",
                  "T1b(s)",
                  "T1b(m)",
                  "T2(s)",
                  "T2(m)",
                  "T3(s)",
                  "T3(m)",
                  "T4a(s)",
                  "T4a(m)",
                  "T4b(s)",
                  "T4b(m)"
                ],
                "deleted": []
              }
            }
          }
        },
        "clinical_n_category": {
          "restrictions": {
            "script": {
              "left": null,
              "right": [
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n   \n    const nCategoriesExclude = ['n0(i-)','n0(i+)','n0(mol-)','n0(mol+)','n4'];\n    \n    /* Check for contigous spaces wrapped with quotes (empty strings) */\n    const checkforEmpty = entry => {\n      return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n    };\n  \n    if ($row.clinical_tumour_staging_system && $row.clinical_tumour_staging_system != null && !(checkforEmpty($row.clinical_tumour_staging_system))) {\n      if ($row.clinical_tumour_staging_system.trim().toLowerCase() === 'ajcc 6th edition') {\n         if ($field && $field != null && !(checkforEmpty($field)) && nCategoriesExclude.includes($field.trim().toLowerCase())) {\n           result = {\n             valid: false,\n             message: `The designation of '${$field}' in the '${$name}' field is not a valid N category in the clinical_tumour_staging_system '${$row.clinical_tumour_staging_system}'.`\n           };\n         }\n      }\n    }\n    return result;\n})"
              ]
            }
          }
        },
        "clinical_m_category": {
          "restrictions": {
            "codeList": {
              "left": [
                "M0",
                "M0(i+)",
                "M1",
                "M1a",
                "M1a(0)",
                "M1a(1)",
                "M1b",
                "M1b(0)",
                "M1b(1)",
                "M1c",
                "M1c(0)",
                "M1c(1)",
                "M1d",
                "M1d(0)",
                "M1d(1)",
                "M1e"
              ],
              "right": [
                "M0",
                "M0(i+)",
                "M1",
                "M1a",
                "M1a(0)",
                "M1a(1)",
                "M1b",
                "M1b(0)",
                "M1b(1)",
                "M1c",
                "M1c(0)",
                "M1c(1)",
                "M1d",
                "M1d(0)",
                "M1d(1)",
                "M1e",
                "MX"
              ],
              "data": { "added": ["MX"], "deleted": [] }
            },
            "script": {
              "left": null,
              "right": [
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n    const stagingSystems = ['ajcc 7th edition', 'ajcc 8th edition'];\n    const stagingName = $name.trim().toLowerCase().split('_m_category')[0];\n    const tumourStagingSystem = `${stagingName}_tumour_staging_system`;\n\n    /* Check for contigous spaces wrapped with quotes (empty strings) */\n    const checkforEmpty = entry => {\n      return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n    };\n  \n   \n    if ($row[tumourStagingSystem] && $row[tumourStagingSystem] != null && !(checkforEmpty($row[tumourStagingSystem]))) {\n      if (stagingSystems.includes($row[tumourStagingSystem].trim().toLowerCase())) {\n         if ($field && $field != null && !(checkforEmpty($field)) && $field.trim().toLowerCase() === 'mx') {\n           result = {\n             valid: false,\n             message: `The designation of '${$field}' in the '${$name}' field is not a valid M category in the ${tumourStagingSystem} '${$row[tumourStagingSystem]}'.`\n           };\n         }\n      }\n    }\n    return result;\n})"
              ]
            }
          }
        }
      },
      "created": {
        "laterality": {
          "changeType": "created",
          "name": "laterality",
          "description": "For cancer in a paired organ, indicate the side of the body on which the primary tumour or cancer first developed at the time of primary diagnosis. (Reference caDSR 827)",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Bilateral",
              "Left",
              "Midline",
              "Not a paired site",
              "Right",
              "Unilateral, side not specified",
              "Unknown"
            ]
          },
          "meta": { "displayName": "Laterality" }
        }
      },
      "deleted": {}
    },
    "radiation": {
      "updated": {
        "radiation_therapy_dosage": {
          "valueType": { "left": "integer", "right": "number" }
        },
        "anatomical_site_irradiated": {
          "description": {
            "left": "Indicate localization site where radiation therapy was administered.",
            "right": "Indicate body region where radiation therapy was administered. (Reference: Cancer Care Ontario)"
          },
          "restrictions": {
            "codeList": {
              "left": [
                "Abdomen",
                "Bone",
                "Brain",
                "Extremities",
                "Head",
                "Head-Neck",
                "Liver",
                "Lung",
                "Pelvis",
                "Peritoneum",
                "Spine",
                "Thorax"
              ],
              "right": [
                "Abdomen",
                "Body",
                "Brain",
                "Chest",
                "Head",
                "Liver",
                "Lower Limb",
                "Lung",
                "Neck",
                "Pelvis",
                "Skin",
                "Spine",
                "Thorax",
                "Upper Limb"
              ],
              "data": {
                "added": ["Body", "Chest", "Lower Limb", "Neck", "Skin", "Upper Limb"],
                "deleted": ["Bone", "Extremities", "Head-Neck", "Peritoneum"]
              }
            }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "follow_up": {
      "updated": {
        "recurrence_tumour_staging_system": {
          "restrictions": {
            "codeList": {
              "left": [
                "AJCC 8th edition",
                "AJCC 7th edition",
                "Ann Arbor staging system",
                "Binet staging system",
                "Durie-Salmon staging system",
                "FIGO staging system",
                "Lugano staging system",
                "Rai staging system",
                "Revised International staging system (RISS)",
                "St Jude staging system"
              ],
              "right": [
                "AJCC 8th edition",
                "AJCC 7th edition",
                "AJCC 6th edition",
                "Ann Arbor staging system",
                "Binet staging system",
                "Durie-Salmon staging system",
                "FIGO staging system",
                "Lugano staging system",
                "Rai staging system",
                "Revised International staging system (RISS)",
                "St Jude staging system"
              ],
              "data": { "added": ["AJCC 6th edition"], "deleted": [] }
            }
          }
        },
        "recurrence_t_category": {
          "restrictions": {
            "codeList": {
              "left": [
                "T0",
                "T1",
                "T1a",
                "T1a1",
                "T1a2",
                "T1b",
                "T1b1",
                "T1b2",
                "T1c",
                "T1d",
                "T1mi",
                "T2",
                "T2a",
                "T2a1",
                "T2a2",
                "T2b",
                "T2c",
                "T2d",
                "T3",
                "T3a",
                "T3b",
                "T3c",
                "T3d",
                "T3e",
                "T4",
                "T4a",
                "T4b",
                "T4c",
                "T4d",
                "T4e",
                "Ta",
                "Tis",
                "Tis(DCIS)",
                "Tis(LAMN)",
                "Tis(LCIS)",
                "Tis(Paget)",
                "Tis(Paget’s)",
                "Tis pd",
                "Tis pu",
                "TX"
              ],
              "right": [
                "T0",
                "T1",
                "T1a",
                "T1a1",
                "T1a2",
                "T1a(s)",
                "T1a(m)",
                "T1b",
                "T1b1",
                "T1b2",
                "T1b(s)",
                "T1b(m)",
                "T1c",
                "T1d",
                "T1mi",
                "T2",
                "T2(s)",
                "T2(m)",
                "T2a",
                "T2a1",
                "T2a2",
                "T2b",
                "T2c",
                "T2d",
                "T3",
                "T3(s)",
                "T3(m)",
                "T3a",
                "T3b",
                "T3c",
                "T3d",
                "T3e",
                "T4",
                "T4a",
                "T4a(s)",
                "T4a(m)",
                "T4b",
                "T4b(s)",
                "T4b(m)",
                "T4c",
                "T4d",
                "T4e",
                "Ta",
                "Tis",
                "Tis(DCIS)",
                "Tis(LAMN)",
                "Tis(LCIS)",
                "Tis(Paget)",
                "Tis(Paget’s)",
                "Tis pd",
                "Tis pu",
                "TX"
              ],
              "data": {
                "added": [
                  "T1a(s)",
                  "T1a(m)",
                  "T1b(s)",
                  "T1b(m)",
                  "T2(s)",
                  "T2(m)",
                  "T3(s)",
                  "T3(m)",
                  "T4a(s)",
                  "T4a(m)",
                  "T4b(s)",
                  "T4b(m)"
                ],
                "deleted": []
              }
            }
          }
        },
        "recurrence_m_category": {
          "restrictions": {
            "codeList": {
              "left": [
                "M0",
                "M0(i+)",
                "M1",
                "M1a",
                "M1a(0)",
                "M1a(1)",
                "M1b",
                "M1b(0)",
                "M1b(1)",
                "M1c",
                "M1c(0)",
                "M1c(1)",
                "M1d",
                "M1d(0)",
                "M1d(1)",
                "M1e"
              ],
              "right": [
                "M0",
                "M0(i+)",
                "M1",
                "M1a",
                "M1a(0)",
                "M1a(1)",
                "M1b",
                "M1b(0)",
                "M1b(1)",
                "M1c",
                "M1c(0)",
                "M1c(1)",
                "M1d",
                "M1d(0)",
                "M1d(1)",
                "M1e",
                "MX"
              ],
              "data": { "added": ["MX"], "deleted": [] }
            },
            "script": {
              "left": null,
              "right": [
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n    const stagingSystems = ['ajcc 7th edition', 'ajcc 8th edition'];\n    const stagingName = $name.trim().toLowerCase().split('_m_category')[0];\n    const tumourStagingSystem = `${stagingName}_tumour_staging_system`;\n\n    /* Check for contigous spaces wrapped with quotes (empty strings) */\n    const checkforEmpty = entry => {\n      return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n    };\n  \n   \n    if ($row[tumourStagingSystem] && $row[tumourStagingSystem] != null && !(checkforEmpty($row[tumourStagingSystem]))) {\n      if (stagingSystems.includes($row[tumourStagingSystem].trim().toLowerCase())) {\n         if ($field && $field != null && !(checkforEmpty($field)) && $field.trim().toLowerCase() === 'mx') {\n           result = {\n             valid: false,\n             message: `The designation of '${$field}' in the '${$name}' field is not a valid M category in the ${tumourStagingSystem} '${$row[tumourStagingSystem]}'.`\n           };\n         }\n      }\n    }\n    return result;\n})"
              ]
            }
          }
        },

        "posttherapy_tumour_staging_system": {
          "restrictions": {
            "codeList": {
              "left": [
                "AJCC 8th edition",
                "AJCC 7th edition",
                "Ann Arbor staging system",
                "Binet staging system",
                "Durie-Salmon staging system",
                "FIGO staging system",
                "Lugano staging system",
                "Rai staging system",
                "Revised International staging system (RISS)",
                "St Jude staging system"
              ],
              "right": [
                "AJCC 8th edition",
                "AJCC 7th edition",
                "AJCC 6th edition",
                "Ann Arbor staging system",
                "Binet staging system",
                "Durie-Salmon staging system",
                "FIGO staging system",
                "Lugano staging system",
                "Rai staging system",
                "Revised International staging system (RISS)",
                "St Jude staging system"
              ],
              "data": { "added": ["AJCC 6th edition"], "deleted": [] }
            }
          }
        },
        "posttherapy_t_category": {
          "restrictions": {
            "codeList": {
              "left": [
                "T0",
                "T1",
                "T1a",
                "T1a1",
                "T1a2",
                "T1b",
                "T1b1",
                "T1b2",
                "T1c",
                "T1d",
                "T1mi",
                "T2",
                "T2a",
                "T2a1",
                "T2a2",
                "T2b",
                "T2c",
                "T2d",
                "T3",
                "T3a",
                "T3b",
                "T3c",
                "T3d",
                "T3e",
                "T4",
                "T4a",
                "T4b",
                "T4c",
                "T4d",
                "T4e",
                "Ta",
                "Tis",
                "Tis(DCIS)",
                "Tis(LAMN)",
                "Tis(LCIS)",
                "Tis(Paget)",
                "Tis(Paget’s)",
                "Tis pd",
                "Tis pu",
                "TX"
              ],
              "right": [
                "T0",
                "T1",
                "T1a",
                "T1a1",
                "T1a2",
                "T1a(s)",
                "T1a(m)",
                "T1b",
                "T1b1",
                "T1b2",
                "T1b(s)",
                "T1b(m)",
                "T1c",
                "T1d",
                "T1mi",
                "T2",
                "T2(s)",
                "T2(m)",
                "T2a",
                "T2a1",
                "T2a2",
                "T2b",
                "T2c",
                "T2d",
                "T3",
                "T3(s)",
                "T3(m)",
                "T3a",
                "T3b",
                "T3c",
                "T3d",
                "T3e",
                "T4",
                "T4a",
                "T4a(s)",
                "T4a(m)",
                "T4b",
                "T4b(s)",
                "T4b(m)",
                "T4c",
                "T4d",
                "T4e",
                "Ta",
                "Tis",
                "Tis(DCIS)",
                "Tis(LAMN)",
                "Tis(LCIS)",
                "Tis(Paget)",
                "Tis(Paget’s)",
                "Tis pd",
                "Tis pu",
                "TX"
              ],
              "data": {
                "added": [
                  "T1a(s)",
                  "T1a(m)",
                  "T1b(s)",
                  "T1b(m)",
                  "T2(s)",
                  "T2(m)",
                  "T3(s)",
                  "T3(m)",
                  "T4a(s)",
                  "T4a(m)",
                  "T4b(s)",
                  "T4b(m)"
                ],
                "deleted": []
              }
            }
          }
        },
        "posttherapy_m_category": {
          "restrictions": {
            "codeList": {
              "left": [
                "M0",
                "M0(i+)",
                "M1",
                "M1a",
                "M1a(0)",
                "M1a(1)",
                "M1b",
                "M1b(0)",
                "M1b(1)",
                "M1c",
                "M1c(0)",
                "M1c(1)",
                "M1d",
                "M1d(0)",
                "M1d(1)",
                "M1e"
              ],
              "right": [
                "M0",
                "M0(i+)",
                "M1",
                "M1a",
                "M1a(0)",
                "M1a(1)",
                "M1b",
                "M1b(0)",
                "M1b(1)",
                "M1c",
                "M1c(0)",
                "M1c(1)",
                "M1d",
                "M1d(0)",
                "M1d(1)",
                "M1e",
                "MX"
              ],
              "data": { "added": ["MX"], "deleted": [] }
            },
            "script": {
              "left": null,
              "right": [
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n    const stagingSystems = ['ajcc 7th edition', 'ajcc 8th edition'];\n    const stagingName = $name.trim().toLowerCase().split('_m_category')[0];\n    const tumourStagingSystem = `${stagingName}_tumour_staging_system`;\n\n    /* Check for contigous spaces wrapped with quotes (empty strings) */\n    const checkforEmpty = entry => {\n      return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'));\n    };\n  \n   \n    if ($row[tumourStagingSystem] && $row[tumourStagingSystem] != null && !(checkforEmpty($row[tumourStagingSystem]))) {\n      if (stagingSystems.includes($row[tumourStagingSystem].trim().toLowerCase())) {\n         if ($field && $field != null && !(checkforEmpty($field)) && $field.trim().toLowerCase() === 'mx') {\n           result = {\n             valid: false,\n             message: `The designation of '${$field}' in the '${$name}' field is not a valid M category in the ${tumourStagingSystem} '${$row[tumourStagingSystem]}'.`\n           };\n         }\n      }\n    }\n    return result;\n})"
              ]
            }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "biomarker": {
      "updated": {
        "submitter_specimen_id": {
          "meta": {
            "notes": {
              "left": null,
              "right": "Only one of ['submitter_specimen_id', 'submitter_primary_diagnosis_id', 'submitter_treatment_id', 'submitter_follow_up_id'] is required. If the biomarker test is not associated with a specimen or primary diagnosis, treatment or follow up event, then the 'test_interval' field will be required."
            }
          }
        },
        "submitter_primary_diagnosis_id": {
          "meta": {
            "notes": {
              "left": null,
              "right": "Only one of ['submitter_specimen_id', 'submitter_primary_diagnosis_id', 'submitter_treatment_id', 'submitter_follow_up_id'] is required. If the biomarker test is not associated with a specimen or primary diagnosis, treatment or follow up event, then the 'test_interval' field will be required."
            }
          }
        },
        "submitter_treatment_id": {
          "meta": {
            "notes": {
              "left": null,
              "right": "Only one of ['submitter_specimen_id', 'submitter_primary_diagnosis_id', 'submitter_treatment_id', 'submitter_follow_up_id'] is required. If the biomarker test is not associated with a specimen or primary diagnosis, treatment or follow up event, then the 'test_interval' field will be required."
            }
          }
        },
        "submitter_follow_up_id": {
          "meta": {
            "notes": {
              "left": null,
              "right": "Only one of ['submitter_specimen_id', 'submitter_primary_diagnosis_id', 'submitter_treatment_id', 'submitter_follow_up_id'] is required. If the biomarker test is not associated with a specimen or primary diagnosis, treatment or follow up event, then the 'test_interval' field will be required."
            }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "comorbidity": {
      "updated": {
        "comorbidity_type_code": {
          "meta": {
            "notes": {
              "left": null,
              "right": "This field is required because it should have a cancer or non-cancer ICD-10 code. This field is marked 'Conditional' because it depends on the value of the `prior_malignancy` field. Both these fields will need to be consistent. If `prior_malignancy` is `Yes`, then an ICD-10 code related to cancer is expected in this field. If `prior_malignancy` is `No`, then an ICD-10 code related to a non-cancer condition is expected in this field."
            }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "chemotherapy": {
      "updated": {},
      "created": {
        "dose_intensity_reduction": {
          "changeType": "created",
          "name": "dose_intensity_reduction",
          "description": "Indicate if there was a significant reduction in dose intensity.",
          "valueType": "string",
          "restrictions": { "codeList": ["Yes", "No", "Unknown"] },
          "meta": { "displayName": "Dose Intensity Reduction" }
        },
        "dose_intensity_reduction_event": {
          "changeType": "created",
          "name": "dose_intensity_reduction_event",
          "description": "If there was a signficiant reduction in dose intensity, indicate which event caused it.",
          "valueType": "string",
          "restrictions": {
            "codeList": ["Dose reduction", "Dose delay or dose omission", "Both"],
            "script": [
              "(function validate(inputs) {\n      const {$row, $name, $field} = inputs;\n      let result = {valid: true, message: \"Ok\"};\n \n      // checks for a string just consisting of whitespace\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(entry.replace(/^\"(.*)\"$/, '$1'))};\n\n      if ($field && $field != null && !(checkforEmpty($field))) {\n        if (!$row.dose_intensity_reduction || checkforEmpty($row.dose_intensity_reduction) || $row.dose_intensity_reduction === null) {\n          result = {\n            valid: false,\n            message: `The 'dose_intensity_reduction' field is required if the '${$name}' field is submitted.`,\n          };\n        }\n        else if ($row.dose_intensity_reduction.trim().toLowerCase() === 'no') {\n          result = {\n            valid: false,\n            message: `The '${$name}' field cannot be submitted if 'dose_intensity_reduction' field is 'No'.`,\n          };\n        } \n      }\n      else if (!$field || $field === null || checkforEmpty($field)) {\n        if ($row.dose_intensity_reduction && !(checkforEmpty($row.dose_intensity_reduction)) && $row.dose_intensity_reduction.trim().toLowerCase() === 'yes') {\n          result = {\n            valid: false,\n            message: `The '${$name}' field is required if 'dose_intensity_reduction' field is 'Yes'.`\n          };\n        }\n      }\n      return result;\n  })"
            ]
          },
          "meta": {
            "displayName": "Dose Intensity Reduction Event",
            "notes": "This field should only be submitted if 'dose_intensity_reduction' is 'Yes'"
          }
        },
        "dose_intensity_reduction_amount": {
          "changeType": "created",
          "name": "dose_intensity_reduction_amount",
          "description": "If there was a significant reduction in dose intensity, indicate the amount.",
          "valueType": "string",
          "restrictions": {
            "codeList": ["<20%", "20-49%", ">=50%", "Unknown"],
            "script": [
              "(function validate(inputs) {\n      const {$row, $name, $field} = inputs;\n      let result = {valid: true, message: \"Ok\"};\n \n      // checks for a string just consisting of whitespace\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(entry.replace(/^\"(.*)\"$/, '$1'))};\n\n      if ($field && $field != null && !(checkforEmpty($field))) {\n        if (!$row.dose_intensity_reduction || checkforEmpty($row.dose_intensity_reduction) || $row.dose_intensity_reduction === null) {\n          result = {\n            valid: false,\n            message: `The 'dose_intensity_reduction' field is required if the '${$name}' field is submitted.`,\n          };\n        }\n        else if ($row.dose_intensity_reduction.trim().toLowerCase() === 'no') {\n          result = {\n            valid: false,\n            message: `The '${$name}' field cannot be submitted if 'dose_intensity_reduction' field is 'No'.`,\n          };\n        } \n      }\n      else if (!$field || $field === null || checkforEmpty($field)) {\n        if ($row.dose_intensity_reduction && !(checkforEmpty($row.dose_intensity_reduction)) && $row.dose_intensity_reduction.trim().toLowerCase() === 'yes') {\n          result = {\n            valid: false,\n            message: `The '${$name}' field is required if 'dose_intensity_reduction' field is 'Yes'.`\n          };\n        }\n      }\n      return result;\n  })"
            ]
          },
          "meta": {
            "displayName": "Amount of Dose Intensity Reduction",
            "notes": "This field should only be submitted if 'dose_intensity_reduction' is 'Yes'"
          }
        }
      },
      "deleted": {}
    }
  }
}
