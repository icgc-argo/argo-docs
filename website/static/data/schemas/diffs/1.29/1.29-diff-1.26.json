{
  "schemas": {
    "donor": {
      "updated": {},
      "created": {},
      "deleted": {
        "country_of_residence_at_enrollment": {
          "changeType": "deleted",
          "description": "Indicate the donor's country of residence at the time they were enrolled in the study. The country list include 193 UN member states plus 2 UN observer states. Source: https://www.un.org/en/about-us/member-states",
          "name": "country_of_residence_at_enrollment",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Afghanistan",
              "Albania",
              "Algeria",
              "Andorra",
              "Angola",
              "Antigua and Barbuda",
              "Argentina",
              "Armenia",
              "Australia",
              "Austria",
              "Azerbaijan",
              "Bahamas",
              "Bahrain",
              "Bangladesh",
              "Barbados",
              "Belarus",
              "Belgium",
              "Belize",
              "Benin",
              "Bhutan",
              "Bolivia (Plurinational State of)",
              "Bosnia and Herzegovina",
              "Botswana",
              "Brazil",
              "Brunei Darussalam",
              "Bulgaria",
              "Burkina Faso",
              "Burundi",
              "Cabo Verde",
              "Cambodia",
              "Cameroon",
              "Canada",
              "Central African Republic",
              "Chad",
              "Chile",
              "China",
              "Colombia",
              "Comoros",
              "Congo",
              "Costa Rica",
              "Côte d’Ivoire",
              "Croatia",
              "Cuba",
              "Cyprus",
              "Czechia",
              "Democratic People’s Republic of Korea",
              "Democratic Republic of the Congo",
              "Denmark",
              "Djibouti",
              "Dominica",
              "Dominican Republic",
              "Ecuador",
              "Egypt",
              "El Salvador",
              "Equatorial Guinea",
              "Eritrea",
              "Estonia",
              "Eswatini",
              "Ethiopia",
              "Fiji",
              "Finland",
              "France",
              "Gabon",
              "Gambia",
              "Georgia",
              "Germany",
              "Ghana",
              "Greece",
              "Grenada",
              "Guatemala",
              "Guinea",
              "Guinea-Bissau",
              "Guyana",
              "Haiti",
              "Honduras",
              "Hungary",
              "Iceland",
              "India",
              "Indonesia",
              "Iran (Islamic Republic of)",
              "Iraq",
              "Ireland",
              "Israel",
              "Italy",
              "Jamaica",
              "Japan",
              "Jordan",
              "Kazakhstan",
              "Kenya",
              "Kiribati",
              "Kuwait",
              "Kyrgyzstan",
              "Lao People’s Democratic Republic",
              "Latvia",
              "Lebanon",
              "Lesotho",
              "Liberia",
              "Libya",
              "Liechtenstein",
              "Lithuania",
              "Luxembourg",
              "Madagascar",
              "Malawi",
              "Malaysia",
              "Maldives",
              "Mali",
              "Malta",
              "Marshall Islands",
              "Mauritania",
              "Mauritius",
              "Mexico",
              "Micronesia (Federated States of)",
              "Monaco",
              "Mongolia",
              "Montenegro",
              "Morocco",
              "Mozambique",
              "Myanmar",
              "Namibia",
              "Nauru",
              "Nepal",
              "Netherlands",
              "New Zealand",
              "Nicaragua",
              "Niger",
              "Nigeria",
              "North Macedonia",
              "Norway",
              "Oman",
              "Pakistan",
              "Palau",
              "Panama",
              "Papua New Guinea",
              "Paraguay",
              "Peru",
              "Philippines",
              "Poland",
              "Portugal",
              "Qatar",
              "Republic of Korea",
              "Republic of Moldova",
              "Romania",
              "Russian Federation",
              "Rwanda",
              "Saint Kitts and Nevis",
              "Saint Lucia",
              "Saint Vincent and the Grenadines",
              "Samoa",
              "San Marino",
              "Sao Tome and Principe",
              "Saudi Arabia",
              "Senegal",
              "Serbia",
              "Seychelles",
              "Sierra Leone",
              "Singapore",
              "Slovakia",
              "Slovenia",
              "Solomon Islands",
              "Somalia",
              "South Africa",
              "South Sudan",
              "Spain",
              "Sri Lanka",
              "Sudan",
              "Suriname",
              "Sweden",
              "Switzerland",
              "Syrian Arab Republic",
              "Tajikistan",
              "Thailand",
              "Timor-Leste",
              "Togo",
              "Tonga",
              "Trinidad and Tobago",
              "Tunisia",
              "Turkey",
              "Turkmenistan",
              "Tuvalu",
              "Uganda",
              "Ukraine",
              "United Arab Emirates",
              "United Kingdom of Great Britain and Northern Ireland",
              "United Republic of Tanzania",
              "United States of America",
              "Uruguay",
              "Uzbekistan",
              "Vanuatu",
              "Venezuela (Bolivarian Republic of)",
              "Viet Nam",
              "Yemen",
              "Zambia",
              "Zimbabwe",
              "Holy See",
              "State of Palestine"
            ]
          },
          "meta": { "displayName": "Country of Residence at Enrollment" }
        }
      }
    },
    "treatment": {
      "updated": {
        "response_to_treatment_criteria_method": {
          "restrictions": {
            "codeList": {
              "left": [
                "ELN Dohner AML 2017 Oncology Response Criteria",
                "IWG Cheson AML 2003 Oncology Response Criteria",
                "iRECIST",
                "RECIST",
                "RECIST 1.1",
                "Response Assessment in Neuro-Oncology (RANO)",
                "Physician Assessed Response Criteria"
              ],
              "right": [
                "ELN Dohner AML 2017 Oncology Response Criteria",
                "IWG Cheson AML 2003 Oncology Response Criteria",
                "iRECIST",
                "RECIST",
                "Response Assessment in Neuro-Oncology (RANO)",
                "Physician Assessed Response Criteria"
              ],
              "data": { "added": [], "deleted": ["RECIST 1.1"] }
            }
          }
        },
        "response_to_treatment": {
          "restrictions": {
            "script": {
              "left": [
                "(function validate(inputs) {\n\t\tconst { $row, $name, $field } = inputs;\n\t\tconst result = { valid: true, message: 'Ok' };\n\n\t\tconst arrayItemsInSecondArray = (arr1, arr2) => {\n\t\t\treturn arr2.some(arr2Item => {\n\t\t\t\treturn arr1.includes(arr2Item);\n\t\t\t});\n\t\t};\n\n\t\tconst coreFields = [\n\t\t\t'treatment_start_interval',\n\t\t\t'treatment_duration',\n\t\t\t'is_primary_treatment',\n\t\t\t'treatment_intent',\n\t\t\t'treatment_setting',\n\t\t\t'response_to_treatment_criteria_method',\n\t\t\t'response_to_treatment',\n\t\t];\n\n\t\tconst treatmentExceptionTypes = ['no treatment', 'unknown'];\n\n\t\tconst checkforInvalid = entry => {\n\t\t\t// note: negative numbers are allowed as per\n\t\t\t// https://github.com/icgc-argo/argo-dictionary/issues/432 */\n\n\t\t\treturn (\n\t\t\t\t// regular falsy values\n\t\t\t\t[null, undefined, ''].includes($field) ||\n\t\t\t\t// whitespace-filled strings\n\t\t\t\t/^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))\n\t\t\t);\n\t\t};\n\n\t\tconst treatmentTypes = $row.treatment_type.map(value => value.toLowerCase());\n\n\t\tconst recordHasTreatments = !arrayItemsInSecondArray(treatmentExceptionTypes, treatmentTypes);\n\n\t\tif (recordHasTreatments) {\n\t\t\tif (coreFields.includes($name) && checkforInvalid($field)) {\n\t\t\t\treturn {\n\t\t\t\t\tvalid: false,\n\t\t\t\t\tmessage: `The '${$name}' field must be submitted when the 'treatment_type' field is '${treatmentTypes}'`,\n\t\t\t\t};\n\t\t\t}\n\t\t} // otherwise, is there a valid value without a treatment defined\n\t\telse if (!checkforInvalid($field)) {\n\t\t\tif (\n\t\t\t\tcoreFields.includes($name) ||\n\t\t\t\t(typeof $field === 'string' && $field.trim().toLowerCase() != 'not applicable') ||\n\t\t\t\t!isNaN(parseFloat($field))\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\tvalid: false,\n\t\t\t\t\tmessage: `The '${$name}' field cannot be submitted if the 'treatment_type' field is '${treatmentTypes}'`,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t})",
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n\n    /* checks for a string just consisting of whitespace */\n    const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n    let codeList = [];\n    \n      switch ($row.response_to_treatment_criteria_method && $row.response_to_treatment_criteria_method.trim().toLowerCase()) {\n        case 'eln dohner aml 2017 oncology response criteria':\n          codeList = [\n            'complete remission',\n            'complete remission with incomplete hematologic recovery (cri)',\n            'complete remission without minimal residual disease (crmrd-)',\n            'hematologic relapse (after crmrd-, cr, cri)',\n            'molecular relapse (after crmrd-)',\n            'partial remission',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'iwg cheson aml 2003 oncology response criteria':\n          codeList = [\n            'cytogenetic complete remission (crc)',\n            'molecular complete remission (crm)',\n            'morphologic complete remission',\n            'morphologic complete remission with incomplete blood count recovery (cri)',\n            'morphologic leukemia-free state',\n            'partial remission'\n          ];\n          break;\n        case 'irecist':\n          codeList = [\n            'immune complete response (icr)',\n            'immune confirmed progressive disease (icpd)',\n            'immune partial response (ipr)',\n            'immune stable disease (isd)',\n            'immune unconfirmed progressive disease (iupd)'\n          ];\n          break;\n        case 'recist':\n          codeList = [\n            'complete response',\n            'no evidence of disease (ned)',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'response assessment in neuro-oncology (rano)':\n          codeList = [\n            'complete response',\n            'minor response',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'physician assessed response criteria':\n          codeList = [\n            'physician assessed complete response',\n            'physician assessed partial response',\n            'physician assessed progressive disease',\n            'physician assessed stable disease'\n          ];\n          break;\n        case 'recist 1.1':\n          codeList = [\n            'complete response',\n            'not evaluable (ne)',\n            'non-complete response/non-progressive disease (non-cr/non-pd)',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        default:\n          codelist = [];\n      }\n\n    if ($field && $field != null && !(checkforEmpty($field))) {\n      if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n        const msg = `'${$field}' is not a permissible value. When 'response_to_treatment_criteria_method' is set to '${\n          $row.response_to_treatment_criteria_method}', the '${$name}' field must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`;\n\n        result.valid = false;\n        result.message = msg;\n      }\n    }\n    else {\n       if ($row.response_to_treatment_criteria_method && $row.response_to_treatment_criteria_method != null && !(checkforEmpty($row.response_to_treatment_criteria_method))) {\n         result = { valid: false, message: `The '${$name}' field must be submitted when 'response_to_treatment_criteria_method' is set to '${$row.response_to_treatment_criteria_method}'. The '${$name}' field must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`};\n       }\n    }\n    return result;\n  })"
              ],
              "right": [
                "(function validate(inputs) {\n\t\tconst { $row, $name, $field } = inputs;\n\t\tconst result = { valid: true, message: 'Ok' };\n\n\t\tconst arrayItemsInSecondArray = (arr1, arr2) => {\n\t\t\treturn arr2.some(arr2Item => {\n\t\t\t\treturn arr1.includes(arr2Item);\n\t\t\t});\n\t\t};\n\n\t\tconst coreFields = [\n\t\t\t'treatment_start_interval',\n\t\t\t'treatment_duration',\n\t\t\t'is_primary_treatment',\n\t\t\t'treatment_intent',\n\t\t\t'treatment_setting',\n\t\t\t'response_to_treatment_criteria_method',\n\t\t\t'response_to_treatment',\n\t\t];\n\n\t\tconst treatmentExceptionTypes = ['no treatment', 'unknown'];\n\n\t\tconst checkforInvalid = entry => {\n\t\t\t// note: negative numbers are allowed as per\n\t\t\t// https://github.com/icgc-argo/argo-dictionary/issues/432 */\n\n\t\t\treturn (\n\t\t\t\t// regular falsy values\n\t\t\t\t[null, undefined, ''].includes($field) ||\n\t\t\t\t// whitespace-filled strings\n\t\t\t\t/^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))\n\t\t\t);\n\t\t};\n\n\t\tconst treatmentTypes = $row.treatment_type.map(value => value.toLowerCase());\n\n\t\tconst recordHasTreatments = !arrayItemsInSecondArray(treatmentExceptionTypes, treatmentTypes);\n\n\t\tif (recordHasTreatments) {\n\t\t\tif (coreFields.includes($name) && checkforInvalid($field)) {\n\t\t\t\treturn {\n\t\t\t\t\tvalid: false,\n\t\t\t\t\tmessage: `The '${$name}' field must be submitted when the 'treatment_type' field is '${treatmentTypes}'`,\n\t\t\t\t};\n\t\t\t}\n\t\t} // otherwise, is there a valid value without a treatment defined\n\t\telse if (!checkforInvalid($field)) {\n\t\t\tif (\n\t\t\t\tcoreFields.includes($name) ||\n\t\t\t\t(typeof $field === 'string' && $field.trim().toLowerCase() != 'not applicable') ||\n\t\t\t\t!isNaN(parseFloat($field))\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\tvalid: false,\n\t\t\t\t\tmessage: `The '${$name}' field cannot be submitted if the 'treatment_type' field is '${treatmentTypes}'`,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t})",
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n\n    /* checks for a string just consisting of whitespace */\n    const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n    let codeList = [];\n    \n      switch ($row.response_to_treatment_criteria_method && $row.response_to_treatment_criteria_method.trim().toLowerCase()) {\n        case 'eln dohner aml 2017 oncology response criteria':\n          codeList = [\n            'complete remission',\n            'complete remission with incomplete hematologic recovery (cri)',\n            'complete remission without minimal residual disease (crmrd-)',\n            'hematologic relapse (after crmrd-, cr, cri)',\n            'molecular relapse (after crmrd-)',\n            'partial remission',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'iwg cheson aml 2003 oncology response criteria':\n          codeList = [\n            'cytogenetic complete remission (crc)',\n            'molecular complete remission (crm)',\n            'morphologic complete remission',\n            'morphologic complete remission with incomplete blood count recovery (cri)',\n            'morphologic leukemia-free state',\n            'partial remission'\n          ];\n          break;\n        case 'irecist':\n          codeList = [\n            'immune complete response (icr)',\n            'immune confirmed progressive disease (icpd)',\n            'immune partial response (ipr)',\n            'immune stable disease (isd)',\n            'immune unconfirmed progressive disease (iupd)'\n          ];\n          break;\n        case 'recist':\n          codeList = [\n            'complete response',\n            'no evidence of disease (ned)',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'response assessment in neuro-oncology (rano)':\n          codeList = [\n            'complete response',\n            'minor response',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'physician assessed response criteria':\n          codeList = [\n            'physician assessed complete response',\n            'physician assessed partial response',\n            'physician assessed progressive disease',\n            'physician assessed stable disease'\n          ];\n          break;\n        default:\n          codelist = [];\n      }\n\n    if ($field && $field != null && !(checkforEmpty($field))) {\n      if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n        const msg = `'${$field}' is not a permissible value. When 'response_to_treatment_criteria_method' is set to '${\n          $row.response_to_treatment_criteria_method}', the '${$name}' field must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`;\n\n        result.valid = false;\n        result.message = msg;\n      }\n    }\n    else {\n       if ($row.response_to_treatment_criteria_method && $row.response_to_treatment_criteria_method != null && !(checkforEmpty($row.response_to_treatment_criteria_method))) {\n         result = { valid: false, message: `The '${$name}' field must be submitted when 'response_to_treatment_criteria_method' is set to '${$row.response_to_treatment_criteria_method}'. The '${$name}' field must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`};\n       }\n    }\n    return result;\n  })"
              ]
            },
            "codeList": {
              "left": [
                "Complete remission",
                "Complete remission with incomplete hematologic recovery (CRi)",
                "Complete remission without minimal residual disease (CRMRD-)",
                "Complete response",
                "Cytogenetic complete remission (CRc)",
                "Hematologic relapse (after CRMRD-, CR, CRi)",
                "Immune complete response (iCR)",
                "Immune confirmed progressive disease (iCPD)",
                "Immune partial response (iPR)",
                "Immune stable disease (iSD)",
                "Immune unconfirmed progressive disease (iUPD)",
                "Minor response",
                "Molecular complete remission (CRm)",
                "Molecular relapse (after CRMRD-)",
                "Morphologic complete remission",
                "Morphologic complete remission with incomplete blood count recovery (CRi)",
                "Morphologic leukemia-free state",
                "No evidence of disease (NED)",
                "Non-Complete response/Non-Progressive disease (Non-CR/Non-PD)",
                "Not evaluable (NE)",
                "Partial remission",
                "Partial response",
                "Physician assessed complete response",
                "Physician assessed partial response",
                "Physician assessed progressive disease",
                "Physician assessed stable disease",
                "Progressive disease",
                "Stable disease"
              ],
              "right": [
                "Complete remission",
                "Complete remission with incomplete hematologic recovery (CRi)",
                "Complete remission without minimal residual disease (CRMRD-)",
                "Complete response",
                "Cytogenetic complete remission (CRc)",
                "Hematologic relapse (after CRMRD-, CR, CRi)",
                "Immune complete response (iCR)",
                "Immune confirmed progressive disease (iCPD)",
                "Immune partial response (iPR)",
                "Immune stable disease (iSD)",
                "Immune unconfirmed progressive disease (iUPD)",
                "Minor response",
                "Molecular complete remission (CRm)",
                "Molecular relapse (after CRMRD-)",
                "Morphologic complete remission",
                "Morphologic complete remission with incomplete blood count recovery (CRi)",
                "Morphologic leukemia-free state",
                "No evidence of disease (NED)",
                "Partial remission",
                "Partial response",
                "Physician assessed complete response",
                "Physician assessed partial response",
                "Physician assessed progressive disease",
                "Physician assessed stable disease",
                "Progressive disease",
                "Stable disease"
              ],
              "data": {
                "added": [],
                "deleted": [
                  "Non-Complete response/Non-Progressive disease (Non-CR/Non-PD)",
                  "Not evaluable (NE)"
                ]
              }
            }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "family_history": {
      "updated": {
        "relationship_type": {
          "restrictions": {
            "codeList": {
              "left": [
                "Aunt",
                "Brother",
                "Child",
                "Cousin",
                "Daughter",
                "Father",
                "Grandchild",
                "Grandfather",
                "Grandmother",
                "Maternal Aunt",
                "Maternal Cousin",
                "Maternal Grandfather",
                "Maternal Grandmother",
                "Maternal Half-brother",
                "Maternal Half-sister",
                "Maternal Uncle",
                "Mother",
                "Nephew",
                "Niece",
                "Other",
                "Paternal Aunt",
                "Paternal Cousin",
                "Paternal Grandfather",
                "Paternal Grandmother",
                "Paternal Half-brother",
                "Paternal Half-sister",
                "Paternal Uncle",
                "Sibling",
                "Sister",
                "Son",
                "Uncle",
                "Unknown"
              ],
              "right": [
                "Aunt",
                "Brother",
                "Cousin",
                "Daughter",
                "Father",
                "Grandchild",
                "Grandfather",
                "Grandmother",
                "Maternal Aunt",
                "Maternal Cousin",
                "Maternal Grandfather",
                "Maternal Grandmother",
                "Maternal Half-brother",
                "Maternal Half-sister",
                "Maternal Uncle",
                "Mother",
                "Nephew",
                "Niece",
                "Other",
                "Paternal Aunt",
                "Paternal Cousin",
                "Paternal Grandfather",
                "Paternal Grandmother",
                "Paternal Half-brother",
                "Paternal Half-sister",
                "Paternal Uncle",
                "Sister",
                "Son",
                "Uncle",
                "Unknown"
              ],
              "data": { "added": [], "deleted": ["Child", "Sibling"] }
            }
          }
        }
      },
      "created": {},
      "deleted": {}
    }
  }
}
